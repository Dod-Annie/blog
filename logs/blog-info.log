2020-06-29 17:49:18.468 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 61236 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 17:49:18.475 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 17:49:19.709 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 17:49:19.785 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 72ms. Found 4 MongoDB repository interfaces.
2020-06-29 17:49:20.310 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$3b35f81b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:20.346 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:20.356 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4e9ec390] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:20.359 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$357667d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:20.362 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 17:49:20.407 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:20.422 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:20.442 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.125 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 17:49:22.126 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.180 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.467 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.472 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.478 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.481 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.483 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.487 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.487 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.502 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#15b642b9' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.504 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#15b642b9' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.524 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#4052c8c2' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.527 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6f911326' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.529 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6f911326' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.545 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.547 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$6075a4e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.550 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$e2d55d31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:22.560 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$737793be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.231 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 17:49:23.274 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.284 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.292 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$636b84ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.403 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.426 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.483 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.550 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.814 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.822 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.844 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3332c7a5' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.845 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3332c7a5' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.846 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#1095d23a' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.846 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3e39baf0' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.847 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3e39baf0' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.855 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.856 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.874 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.877 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.914 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:23.940 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:49:24.275 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 17:49:24.280 INFO  [cluster-ClusterId{value='5ef9b923647c14ef3471a607', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 17:49:24.289 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 17:49:24.297 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 17:49:24.298 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 17:49:24.442 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 17:49:24.442 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5894 ms
2020-06-29 17:49:25.945 INFO  [main]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-29 17:49:25.948 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Stopping service [Tomcat]
2020-06-29 17:49:25.963 INFO  [main]o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-29 17:50:22.744 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 40788 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 17:50:22.749 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 17:50:23.291 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 17:50:23.354 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 60ms. Found 4 MongoDB repository interfaces.
2020-06-29 17:50:23.650 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$1edc0c2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:23.684 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:23.693 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3244d79f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:23.696 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$191c7be1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:23.698 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 17:50:23.733 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:23.745 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:23.762 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:25.846 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 17:50:25.847 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:25.903 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.075 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.081 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.087 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.092 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.093 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.097 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.098 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.109 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#4e1a46fb' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.111 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#4e1a46fb' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.135 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3d4e405e' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.137 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7b306b9f' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.139 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7b306b9f' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.152 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.154 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$441bb8f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.156 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$c67b7140] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.163 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$571da7cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.838 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 17:50:26.869 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.877 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.886 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$471198fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.966 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:26.985 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.028 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.074 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.280 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.287 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.309 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#51e3d37e' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.310 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#51e3d37e' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.311 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#4f486211' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.311 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#8a6631b' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.312 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#8a6631b' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.318 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.318 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.334 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.336 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.363 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.382 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:50:27.626 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 17:50:27.637 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 17:50:27.643 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 17:50:27.644 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 17:50:27.761 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 17:50:27.761 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4943 ms
2020-06-29 17:50:27.867 INFO  [cluster-ClusterId{value='5ef9b962647c149f54ae07e7', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 17:50:29.125 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-06-29 17:50:29.144 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-06-29 17:50:29.146 INFO  [main]com.dodannie.blog.BlogApplication.logStarted:59 -Started BlogApplication in 6.942 seconds (JVM running for 7.973)
2020-06-29 17:52:18.819 INFO  [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-29 17:52:18.819 INFO  [http-nio-1000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-29 17:52:18.832 INFO  [http-nio-1000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-06-29 17:52:25.010 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 17:52:25.011 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 17:52:25.012 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 17:52:25.013 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 17:52:25.013 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]
2020-06-29 17:52:25.107 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 97
2020-06-29 17:52:25.108 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":40002,"msg":"用户名或密码错误！！"}
2020-06-29 17:52:56.176 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 17:52:56.176 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 17:52:56.176 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 17:52:56.176 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 17:52:56.177 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-06-29 17:52:56.204 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 28
2020-06-29 17:52:56.206 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"token":"AFD360580C40079D8026A8260737AFE4"},"msg":"操作成功"}
2020-06-29 17:55:06.911 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/tengxun
2020-06-29 17:55:06.911 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 17:55:06.911 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 17:55:06.912 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 17:55:06.912 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@715846b5, org.apache.catalina.session.StandardSessionFacade@77cc1d5f]
2020-06-29 17:58:33.707 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 53808 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 17:58:33.737 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 17:58:34.299 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 17:58:34.379 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 76ms. Found 4 MongoDB repository interfaces.
2020-06-29 17:58:34.753 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$739523e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:34.794 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:34.901 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$86fdef58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:34.904 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$6dd5939a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:34.907 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 17:58:34.949 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:34.960 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:34.979 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.709 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 17:58:36.709 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.762 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.960 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.965 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.972 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.976 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.977 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.981 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.982 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:36.999 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7a84788f' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.001 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7a84788f' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.026 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#74ba6ff5' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.028 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#21edd891' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.031 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#21edd891' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.048 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.050 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$98d4d0ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.052 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$1b3488f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.060 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$abd6bf86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.747 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 17:58:37.780 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.787 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.795 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$9bcab0b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.869 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.896 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:37.946 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.241 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.252 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.292 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#2905b568' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.292 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#2905b568' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.293 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#243c4346' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.294 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#1be8c122' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.295 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#1be8c122' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.304 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.305 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.325 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.327 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.358 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.379 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:58:38.646 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 17:58:38.660 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 17:58:38.670 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 17:58:38.670 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 17:58:38.784 INFO  [cluster-ClusterId{value='5ef9bb4d647c14d23024408b', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 17:58:38.818 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 17:58:38.818 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5044 ms
2020-06-29 17:59:12.490 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 25796 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 17:59:12.494 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 17:59:13.081 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 17:59:13.156 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 70ms. Found 4 MongoDB repository interfaces.
2020-06-29 17:59:13.530 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$8397a5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:13.570 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:13.579 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1ba245d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:13.583 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$279ea14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:13.585 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 17:59:13.626 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:13.636 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:13.654 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.287 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 17:59:15.288 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.339 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.528 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.533 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.541 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.544 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.546 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.549 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.550 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.565 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3dbd7107' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.567 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3dbd7107' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.592 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#790d8fdd' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.595 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#19827608' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.598 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#19827608' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.618 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.619 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$2d792728] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.622 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$afd8df73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:15.629 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$407b1600] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.310 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 17:59:16.345 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.352 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.360 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$306f0731] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.432 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.452 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.498 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.557 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.799 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.809 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.832 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5dae5a70' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.833 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5dae5a70' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.834 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5a13f1f7' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.835 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#47c96f2c' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.835 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#47c96f2c' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.842 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.843 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.857 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.859 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.896 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:16.917 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 17:59:17.195 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 17:59:17.206 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 17:59:17.213 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 17:59:17.213 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 17:59:17.344 INFO  [cluster-ClusterId{value='5ef9bb74647c1464c4ee9c3a', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 17:59:17.354 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 17:59:17.354 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4824 ms
2020-06-29 18:00:29.089 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 54252 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 18:00:29.093 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 18:00:29.724 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 18:00:29.805 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 78ms. Found 4 MongoDB repository interfaces.
2020-06-29 18:00:30.176 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$2d0b769b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:30.228 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:30.236 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$40744210] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:30.240 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$274be652] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:30.243 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:00:30.286 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:30.299 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:30.317 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.087 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 18:00:32.088 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.146 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.341 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.346 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.354 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.357 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.359 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.362 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.364 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.378 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#a0c5be' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.380 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#a0c5be' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.404 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#68631b1d' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.407 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#57186526' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.409 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#57186526' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.424 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.426 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$524b2366] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.429 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$d4aadbb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:32.435 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$654d123e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.121 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 18:00:33.159 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.167 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.175 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$5541036f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.249 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.270 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.321 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.376 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.623 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.637 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.663 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#370225c7' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.663 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#370225c7' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.665 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6f8ac8d5' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.667 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#156324b' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.667 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#156324b' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.676 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.677 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.700 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.702 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.739 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:33.761 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:00:34.041 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 18:00:34.054 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 18:00:34.063 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 18:00:34.064 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 18:00:34.156 INFO  [cluster-ClusterId{value='5ef9bbc1647c14d3ec880cad', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 18:00:34.219 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 18:00:34.219 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5075 ms
2020-06-29 18:01:19.813 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 59224 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 18:01:19.817 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 18:01:20.350 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 18:01:20.413 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 60ms. Found 4 MongoDB repository interfaces.
2020-06-29 18:01:20.709 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$a9d5bdeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:20.744 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:20.753 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$bd3e8960] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:20.756 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a4162da2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:20.758 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:01:20.794 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:20.805 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:20.822 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.425 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 18:01:22.425 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.500 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.699 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.704 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.711 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.714 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.715 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.719 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.721 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.739 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#181b8c4b' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.743 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#181b8c4b' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.771 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#1fb2d5e' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.773 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#2b7962a2' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.775 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#2b7962a2' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.792 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.793 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$cf156ab6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.795 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$51752301] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:22.803 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$e217598e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.530 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 18:01:23.561 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.568 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.576 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$d20b4abf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.652 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.670 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.712 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.751 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.929 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.937 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.959 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#83bb0f' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.959 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#83bb0f' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.960 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3e39baf0' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.961 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6adc5b9c' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.961 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6adc5b9c' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.968 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.968 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.982 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:23.984 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:24.010 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:24.029 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:24.255 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 18:01:24.266 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 18:01:24.272 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 18:01:24.273 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 18:01:24.391 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 18:01:24.392 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4537 ms
2020-06-29 18:01:24.571 INFO  [cluster-ClusterId{value='5ef9bbf3647c14e7583fffef', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 18:01:25.690 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-06-29 18:01:25.707 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-06-29 18:01:25.709 INFO  [main]com.dodannie.blog.BlogApplication.logStarted:59 -Started BlogApplication in 6.556 seconds (JVM running for 8.258)
2020-06-29 18:01:31.339 INFO  [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-29 18:01:31.340 INFO  [http-nio-1000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-29 18:01:31.352 INFO  [http-nio-1000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-06-29 18:01:31.427 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 18:01:31.427 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:01:31.428 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:01:31.429 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 18:01:31.429 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-06-29 18:01:31.516 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 89
2020-06-29 18:01:31.564 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"token":"CC02D8D0E25A04BD4A5CF5E8A2617C85"},"msg":"操作成功"}
2020-06-29 18:01:42.354 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 60380 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 18:01:42.358 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 18:01:42.915 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 18:01:42.988 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 69ms. Found 4 MongoDB repository interfaces.
2020-06-29 18:01:43.354 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$5d1b852f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:43.406 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:43.416 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$708450a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:43.419 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$575bf4e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:43.422 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:01:43.469 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:43.481 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:43.500 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.223 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 18:01:45.224 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.276 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.471 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.476 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.483 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.486 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.488 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.492 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.493 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.507 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#32ea16b7' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.509 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#32ea16b7' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.532 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5c4cc644' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.535 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#73f6e07' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.537 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#73f6e07' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.553 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.555 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$825b31fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.557 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$4baea45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:45.564 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$955d20d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.232 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 18:01:46.268 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.276 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.284 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$85511203] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.360 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.381 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.433 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.487 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.719 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.730 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.754 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#166e5a6d' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.755 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#166e5a6d' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.756 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#55e91e61' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.757 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7d6c4079' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.757 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7d6c4079' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.764 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.765 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.779 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.781 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.812 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:46.832 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:01:47.084 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 18:01:47.099 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 18:01:47.107 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 18:01:47.108 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 18:01:47.242 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 18:01:47.242 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4850 ms
2020-06-29 18:01:47.267 INFO  [cluster-ClusterId{value='5ef9bc0a647c14ebdc20796b', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 18:01:48.675 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-06-29 18:01:48.696 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-06-29 18:01:48.698 INFO  [main]com.dodannie.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.148 seconds (JVM running for 8.709)
2020-06-29 18:01:55.070 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-29 18:01:55.070 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-29 18:01:55.088 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 17 ms
2020-06-29 18:01:55.206 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 18:01:55.206 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:01:55.207 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:01:55.209 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 18:01:55.209 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-06-29 18:01:55.343 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 137
2020-06-29 18:01:55.398 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"token":"025A1077B7A8DC9F479408F55C1C7665"},"msg":"操作成功"}
2020-06-29 18:02:03.488 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/tengxun
2020-06-29 18:02:03.488 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:02:03.488 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:02:03.488 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 18:02:03.489 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@8f17945, org.apache.catalina.session.StandardSessionFacade@cd0ea40]
2020-06-29 18:03:25.603 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/tengxun
2020-06-29 18:03:25.603 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:03:25.604 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:03:25.604 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 18:03:25.604 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6e7bfca, org.apache.catalina.session.StandardSessionFacade@cd0ea40]
2020-06-29 18:11:49.570 INFO  [Thread-15]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-29 18:11:49.576 INFO  [Thread-15]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-29 18:11:53.859 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 62332 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 18:11:53.862 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 18:11:54.416 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 18:11:54.489 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 70ms. Found 4 MongoDB repository interfaces.
2020-06-29 18:11:54.863 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$1593aa7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:54.902 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:54.912 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$28fc75f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:54.915 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$fd41a33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:54.918 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:11:54.961 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:54.974 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:54.992 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.631 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 18:11:56.631 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.682 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.870 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.877 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.883 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.886 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.887 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.891 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.892 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.907 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6ffd4c0d' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.909 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6ffd4c0d' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.933 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#44b940a2' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.935 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5a090f62' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.938 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5a090f62' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.954 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.956 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$3ad35747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.958 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$bd330f92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:56.965 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$4dd5461f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:57.663 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 18:11:57.700 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:57.707 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:57.715 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$3dc93750] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:57.786 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:57.805 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:57.859 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:57.911 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.141 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.151 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.175 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6dcf7b6a' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.175 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6dcf7b6a' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.176 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#efe49ab' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.177 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#247bbfba' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.177 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#247bbfba' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.184 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.185 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.201 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.203 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.235 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.256 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:11:58.515 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 18:11:58.527 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 18:11:58.533 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 18:11:58.535 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 18:11:58.662 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 18:11:58.663 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4763 ms
2020-06-29 18:11:58.714 INFO  [cluster-ClusterId{value='5ef9be6d647c14f37cbc8fb2', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 18:12:00.097 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-06-29 18:12:00.120 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-06-29 18:12:00.121 INFO  [main]com.dodannie.blog.BlogApplication.logStarted:59 -Started BlogApplication in 6.985 seconds (JVM running for 8.167)
2020-06-29 18:12:05.120 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-29 18:12:05.120 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-29 18:12:05.138 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 18 ms
2020-06-29 18:12:05.238 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 18:12:05.238 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:12:05.239 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:12:05.241 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 18:12:05.241 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-06-29 18:12:05.352 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 114
2020-06-29 18:12:05.412 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"token":"32D966E592E32A472CD45DA0897BA09F"},"msg":"操作成功"}
2020-06-29 18:12:12.514 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/tengxun
2020-06-29 18:12:12.514 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:12:12.514 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:12:12.514 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 18:12:12.515 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@111a9203, org.apache.catalina.session.StandardSessionFacade@73e63699]
2020-06-29 18:12:44.694 INFO  [Thread-16]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-29 18:12:44.702 INFO  [Thread-16]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-29 18:12:44.763 INFO  [http-nio-1000-exec-3]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:12:45.550 INFO  [http-nio-1000-exec-3]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-2} inited
2020-06-29 18:12:49.426 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 52044 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 18:12:49.429 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 18:12:50.068 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 18:12:50.153 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 80ms. Found 4 MongoDB repository interfaces.
2020-06-29 18:12:50.567 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$d1864736] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:50.609 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:50.618 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e4ef12ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:50.622 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$cbc6b6ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:50.625 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:12:50.667 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:50.679 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:50.698 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.384 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 18:12:52.384 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.437 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.643 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.649 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.656 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.660 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.661 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.666 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.667 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.682 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#22cb3d59' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.683 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#22cb3d59' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.709 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#28b8f98a' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.711 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5f8f1712' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.714 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5f8f1712' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.729 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.731 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$f6c5f401] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.733 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$7925ac4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:52.740 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$9c7e2d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.452 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 18:12:53.490 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.499 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.507 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$f9bbd40a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.592 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.614 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.670 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.725 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.973 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:53.984 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.023 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7bc2bb58' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.024 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7bc2bb58' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.025 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#16cf7fd0' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.026 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7ff6804a' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.026 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7ff6804a' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.038 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.039 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.058 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.061 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.097 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.118 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:12:54.383 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 18:12:54.395 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 18:12:54.403 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 18:12:54.403 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 18:12:54.499 INFO  [cluster-ClusterId{value='5ef9bea5647c14cb4c16f722', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 18:12:54.536 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 18:12:54.536 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5063 ms
2020-06-29 18:12:56.035 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-06-29 18:12:56.057 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-06-29 18:12:56.059 INFO  [main]com.dodannie.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.362 seconds (JVM running for 8.56)
2020-06-29 18:13:01.235 INFO  [Thread-14]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-29 18:13:01.242 INFO  [Thread-14]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-29 18:13:04.367 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 62136 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 18:13:04.400 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 18:13:04.882 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 18:13:04.946 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 59ms. Found 4 MongoDB repository interfaces.
2020-06-29 18:13:05.262 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$d0dc894f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:05.296 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:05.305 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e44554c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:05.308 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$cb1cf906] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:05.310 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:13:05.346 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:05.358 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:05.375 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:06.961 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 18:13:06.961 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.012 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.174 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.179 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.186 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.189 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.190 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.193 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.194 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.205 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#58f39564' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.207 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#58f39564' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.226 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3a082ff4' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.228 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3c3c4a71' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.231 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3c3c4a71' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.243 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.245 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$f61c361a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.247 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$787bee65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.253 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$91e24f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.921 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 18:13:07.951 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.959 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:07.966 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$f9121623] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.065 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.091 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.155 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.442 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.450 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.471 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#307e4c44' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.472 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#307e4c44' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.473 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#4aa2877c' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.474 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#500051c5' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.474 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#500051c5' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.480 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.481 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.495 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.497 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.524 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.542 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:13:08.746 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 18:13:08.756 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 18:13:08.763 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 18:13:08.771 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 18:13:08.886 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 18:13:08.887 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4454 ms
2020-06-29 18:13:08.950 INFO  [cluster-ClusterId{value='5ef9beb3647c14f2b88e0161', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 18:13:10.135 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-06-29 18:13:10.152 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-06-29 18:13:10.153 INFO  [main]com.dodannie.blog.BlogApplication.logStarted:59 -Started BlogApplication in 6.298 seconds (JVM running for 7.685)
2020-06-29 18:13:27.940 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-29 18:13:27.940 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-29 18:13:27.952 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-06-29 18:13:28.031 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 18:13:28.032 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:13:28.032 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:13:28.034 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 18:13:28.034 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-06-29 18:13:28.167 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 136
2020-06-29 18:13:28.220 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"token":"E279BDC05493CE5145C99BD94E70C547"},"msg":"操作成功"}
2020-06-29 18:13:33.478 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/tengxun
2020-06-29 18:13:33.478 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:13:33.478 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:13:33.478 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 18:13:33.478 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1750ebf2, org.apache.catalina.session.StandardSessionFacade@e3008d3]
2020-06-29 18:13:33.977 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 499
2020-06-29 18:13:33.979 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"msg":"上传成功","path":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/a3a4af6d-7206-4bcf-8438-5362df191d17.jpg","status":1}
2020-06-29 18:31:50.076 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 38868 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 18:31:50.087 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 18:31:50.750 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 18:31:50.818 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 65ms. Found 4 MongoDB repository interfaces.
2020-06-29 18:31:51.137 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f9db68ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:51.169 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:51.177 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d443464] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:51.180 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$f41bd8a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:51.183 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:31:51.217 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:51.226 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:51.242 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:52.874 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 18:31:52.875 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:52.923 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.086 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.093 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.099 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.102 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.104 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.107 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.108 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.120 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#46349b95' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.121 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#46349b95' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.142 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#18b8d173' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.145 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3a66e67e' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.147 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3a66e67e' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.160 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.162 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$1f1b15ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.163 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$a17ace05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.170 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$321d0492] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.887 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 18:31:53.915 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.923 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:53.930 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$2210f5c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.009 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.026 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.060 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.096 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.298 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.307 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.333 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#40709f9' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.334 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#40709f9' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.336 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#19c1820d' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.336 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6393bf8b' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.337 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6393bf8b' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.345 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.346 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.364 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.366 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.393 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.412 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:31:54.644 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 18:31:54.653 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 18:31:54.659 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 18:31:54.660 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 18:31:54.779 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 18:31:54.779 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4592 ms
2020-06-29 18:31:54.913 INFO  [cluster-ClusterId{value='5ef9c319647c1497d491588f', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 18:31:56.059 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-06-29 18:31:56.076 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-06-29 18:31:56.078 INFO  [main]com.dodannie.blog.BlogApplication.logStarted:59 -Started BlogApplication in 6.624 seconds (JVM running for 8.135)
2020-06-29 18:32:03.985 INFO  [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-29 18:32:03.985 INFO  [http-nio-1000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-29 18:32:03.997 INFO  [http-nio-1000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 11 ms
2020-06-29 18:32:04.079 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 18:32:04.081 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:32:04.081 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:32:04.083 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 18:32:04.083 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-06-29 18:32:04.174 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 95
2020-06-29 18:32:04.232 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"token":"A2101FA6137D96D12DC0245DE0DDD40E"},"msg":"操作成功"}
2020-06-29 18:36:41.903 INFO  [main]com.dodannie.blog.BlogApplication.logStarting:50 -Starting BlogApplication on DESKTOP-NN4KESQ with PID 51336 (D:\gitlocal\blog\target\classes started by dibang in D:\gitlocal\blog)
2020-06-29 18:36:41.938 INFO  [main]com.dodannie.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-06-29 18:36:42.437 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-29 18:36:42.502 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 62ms. Found 4 MongoDB repository interfaces.
2020-06-29 18:36:42.802 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.dodannie.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$25c854cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:42.837 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:42.847 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$39312042] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:42.851 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$2008c484] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:42.853 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-29 18:36:42.890 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:42.904 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:42.921 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.531 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-29 18:36:44.531 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.582 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.755 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.760 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.766 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.769 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.770 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.dodannie.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.774 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.775 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.787 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#38eb0f4d' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.788 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#38eb0f4d' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.808 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#1716e8c5' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.810 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6ad16c5d' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.812 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#6ad16c5d' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.825 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.828 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration$$EnhancerBySpringCGLIB$$4b080198] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.829 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration$$EnhancerBySpringCGLIB$$cd67b9e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:44.838 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration$$EnhancerBySpringCGLIB$$5e09f070] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.520 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-29 18:36:45.550 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.557 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.565 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration$$EnhancerBySpringCGLIB$$4dfde1a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.658 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.676 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.718 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.760 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.944 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.952 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.975 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#2accaec2' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.975 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#2accaec2' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.976 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#3332c7a5' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.977 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#83bb0f' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.978 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#83bb0f' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.984 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.984 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:45.998 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.dodannie.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:46.000 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.dodannie.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:46.028 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:46.048 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-29 18:36:46.273 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-06-29 18:36:46.285 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-06-29 18:36:46.293 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-29 18:36:46.293 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.34]
2020-06-29 18:36:46.419 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-29 18:36:46.419 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 4448 ms
2020-06-29 18:36:46.559 INFO  [cluster-ClusterId{value='5ef9c43d647c14c8883978ae', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62)
	... 3 common frames omitted
2020-06-29 18:36:47.698 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-06-29 18:36:47.717 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-06-29 18:36:47.718 INFO  [main]com.dodannie.blog.BlogApplication.logStarted:59 -Started BlogApplication in 6.394 seconds (JVM running for 7.707)
2020-06-29 18:38:37.081 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-29 18:38:37.081 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-29 18:38:37.097 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-06-29 18:38:37.183 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 18:38:37.184 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:38:37.184 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:38:37.185 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 18:38:37.186 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-06-29 18:38:37.274 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 91
2020-06-29 18:38:37.329 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"token":"5BA2DECE5312A4C8E47A90C5AD9BAA81"},"msg":"操作成功"}
2020-06-29 18:39:03.231 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/uploadImage
2020-06-29 18:39:03.231 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:39:03.232 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 0:0:0:0:0:0:0:1
2020-06-29 18:39:03.232 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 18:39:03.232 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@e4ca5f1, org.apache.catalina.session.StandardSessionFacade@25d710e8]
2020-06-29 18:39:04.148 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 917
2020-06-29 18:39:04.149 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/541a838b-53ff-4306-9cc0-64ebdd27142c.png","msg":"上传成功！"}
2020-06-29 18:41:24.661 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/login
2020-06-29 18:41:24.661 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:41:24.662 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:24.662 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.login
2020-06-29 18:41:24.662 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-06-29 18:41:24.689 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 28
2020-06-29 18:41:24.690 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"token":"A065D8DDB0D5F8EE07FBA0F127E5BD63"},"msg":"操作成功"}
2020-06-29 18:41:24.955 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/info
2020-06-29 18:41:24.955 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:41:24.956 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:24.956 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.getLoginInfo
2020-06-29 18:41:24.956 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[]
2020-06-29 18:41:24.956 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 1
2020-06-29 18:41:24.959 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","name":"dodannie","password":"","username":"admin"},"msg":"操作成功"}
2020-06-29 18:41:25.065 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /type/getList
2020-06-29 18:41:25.066 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:41:25.066 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:25.066 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.TypeController.getList
2020-06-29 18:41:25.067 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[]
2020-06-29 18:41:25.096 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 31
2020-06-29 18:41:25.099 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}
2020-06-29 18:41:29.633 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /type/listBack
2020-06-29 18:41:29.634 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:41:29.634 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:29.634 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.TypeController.list
2020-06-29 18:41:29.634 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[]
2020-06-29 18:41:29.660 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 27
2020-06-29 18:41:29.661 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}
2020-06-29 18:41:31.284 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /about/getByPage
2020-06-29 18:41:31.284 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:41:31.284 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:31.284 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AboutController.getByPage
2020-06-29 18:41:31.284 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:41:31.368 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 84
2020-06-29 18:41:31.373 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:41:32.322 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /type/listBack
2020-06-29 18:41:32.322 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:41:32.322 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:32.322 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.TypeController.list
2020-06-29 18:41:32.323 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[]
2020-06-29 18:41:32.350 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 28
2020-06-29 18:41:32.350 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}
2020-06-29 18:41:36.419 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /type/enable/6
2020-06-29 18:41:36.420 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : PUT
2020-06-29 18:41:36.420 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:36.420 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.TypeController.enable
2020-06-29 18:41:36.420 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[6]
2020-06-29 18:41:36.489 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 70
2020-06-29 18:41:36.490 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"msg":"已启用"}
2020-06-29 18:41:36.838 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /type/listBack
2020-06-29 18:41:36.839 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:41:36.839 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:36.839 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.TypeController.list
2020-06-29 18:41:36.839 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[]
2020-06-29 18:41:36.865 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 27
2020-06-29 18:41:36.865 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}
2020-06-29 18:41:39.132 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/getByPage
2020-06-29 18:41:39.133 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:41:39.133 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:39.133 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.getByPage
2020-06-29 18:41:39.134 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:41:39.228 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 96
2020-06-29 18:41:39.230 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-28 14:54:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-28 14:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:41:40.123 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /about/getByPage
2020-06-29 18:41:40.123 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:41:40.123 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:40.124 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AboutController.getByPage
2020-06-29 18:41:40.124 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:41:40.177 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 54
2020-06-29 18:41:40.177 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:41:42.112 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /user/getByPage
2020-06-29 18:41:42.112 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:41:42.112 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:42.113 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UserController.getByPage
2020-06-29 18:41:42.113 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:41:42.169 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 57
2020-06-29 18:41:42.172 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-06-28 19:00:47","name":"张馨恬","nickname":"马鞍山丶神烦喵","sex":2,"updateTime":"2020-06-28 19:00:47","userEmail":"xxx","userId":3,"username":"zxt"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:41:49.421 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /type/listBack
2020-06-29 18:41:49.421 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:41:49.422 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:49.423 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.TypeController.list
2020-06-29 18:41:49.423 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[]
2020-06-29 18:41:49.452 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 31
2020-06-29 18:41:49.452 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}
2020-06-29 18:41:52.098 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/getByPage
2020-06-29 18:41:52.099 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:41:52.099 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:52.099 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.getByPage
2020-06-29 18:41:52.099 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:41:52.189 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 91
2020-06-29 18:41:52.190 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-28 14:54:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-28 14:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:41:55.916 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/get/1277133222783172608
2020-06-29 18:41:55.916 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:41:55.916 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:55.916 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.get
2020-06-29 18:41:55.917 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[1277133222783172608]
2020-06-29 18:41:55.945 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 29
2020-06-29 18:41:55.947 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content1","blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","blogType":6,"createdTime":"2020-06-28 14:54:24","version":1},"msg":"操作成功"}
2020-06-29 18:41:59.239 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/uploadImage
2020-06-29 18:41:59.239 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:41:59.240 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:41:59.240 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 18:41:59.240 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4be6d676, org.apache.catalina.session.StandardSessionFacade@5d00de6a]
2020-06-29 18:41:59.677 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 438
2020-06-29 18:41:59.677 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/414eb672-c8eb-427c-b89f-8bb43aed8f14.png","msg":"上传成功！"}
2020-06-29 18:42:04.944 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/get/1277133222783172608
2020-06-29 18:42:04.944 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:42:04.944 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:42:04.944 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.get
2020-06-29 18:42:04.945 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[1277133222783172608]
2020-06-29 18:42:04.972 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 28
2020-06-29 18:42:04.972 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content1","blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","blogType":6,"createdTime":"2020-06-28 14:54:24","version":1},"msg":"操作成功"}
2020-06-29 18:42:09.764 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/uploadImage
2020-06-29 18:42:09.764 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:42:09.764 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:42:09.764 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 18:42:09.764 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4530e6a6, org.apache.catalina.session.StandardSessionFacade@5d00de6a]
2020-06-29 18:42:10.153 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 389
2020-06-29 18:42:10.153 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","msg":"上传成功！"}
2020-06-29 18:42:18.776 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/update
2020-06-29 18:42:18.776 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : PUT
2020-06-29 18:42:18.776 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:42:18.777 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.update
2020-06-29 18:42:18.777 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Blog(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=<p><strong>content132222222222222222</strong></p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-06-28 14:54:24, updateTime=null, version=1, deleted=null)]
2020-06-29 18:42:18.880 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 104
2020-06-29 18:42:18.880 INFO  [http-nio-1000-exec-2]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"msg":"更新成功！"}
2020-06-29 18:42:19.026 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/getByPage
2020-06-29 18:42:19.026 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:42:19.027 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:42:19.027 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.getByPage
2020-06-29 18:42:19.027 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-28 14:54:24), BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-28 14:54:33)], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:42:19.118 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 92
2020-06-29 18:42:19.118 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-28 14:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:46:51.792 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/get/1277133260989087744
2020-06-29 18:46:51.792 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:46:51.793 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:46:51.793 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.get
2020-06-29 18:46:51.793 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[1277133260989087744]
2020-06-29 18:46:51.820 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 28
2020-06-29 18:46:51.821 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content2","blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","blogType":7,"createdTime":"2020-06-28 14:54:33","version":1},"msg":"操作成功"}
2020-06-29 18:46:57.185 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /upload/uploadImage
2020-06-29 18:46:57.185 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:46:57.185 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:46:57.186 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.UploadController.Upload
2020-06-29 18:46:57.186 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1f85f7ba, org.apache.catalina.session.StandardSessionFacade@5d00de6a]
2020-06-29 18:46:57.280 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 95
2020-06-29 18:46:57.281 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","msg":"上传成功！"}
2020-06-29 18:46:59.936 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/update
2020-06-29 18:46:59.937 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : PUT
2020-06-29 18:46:59.938 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:46:59.938 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.update
2020-06-29 18:46:59.938 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Blog(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=content2, blogGoods=0, blogRead=0, blogCollection=0, blogType=7, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-06-28 14:54:33, updateTime=null, version=1, deleted=null)]
2020-06-29 18:47:00.032 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 96
2020-06-29 18:47:00.032 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"msg":"更新成功！"}
2020-06-29 18:47:00.189 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/getByPage
2020-06-29 18:47:00.189 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:47:00.189 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:47:00.189 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.getByPage
2020-06-29 18:47:00.189 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19), BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-28 14:54:33)], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:47:00.271 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 82
2020-06-29 18:47:00.272 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:47:04.397 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /admin/getAdmin
2020-06-29 18:47:04.397 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:47:04.398 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:47:04.399 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AdminController.getAdmin
2020-06-29 18:47:04.399 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[]
2020-06-29 18:47:04.426 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 29
2020-06-29 18:47:04.427 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}
2020-06-29 18:47:16.579 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /music/getByPage
2020-06-29 18:47:16.579 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:47:16.579 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:47:16.579 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.MusicController.getByPage
2020-06-29 18:47:16.579 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:47:16.954 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /log/getByPage
2020-06-29 18:47:16.955 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:47:16.955 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:47:16.955 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.LogController.getByPage
2020-06-29 18:47:16.956 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:47:17.018 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 64
2020-06-29 18:47:17.022 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-06-15 00:05:23","logId":1,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功\"}","logStatus":1,"logTime":22,"logUrl":"/test/testException/1"},{"createdTime":"2020-06-15 00:05:25","logId":2,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功\"}","logStatus":1,"logTime":21,"logUrl":"/test/testException/1"},{"createdTime":"2020-06-15 00:05:27","logId":3,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.dodannie.blog.exception.BlogException: 发生了异常！\n\tat com.dodannie.blog.controller.TestController.testException(TestController.java:23)\n\tat com.dodannie.blog.controller.TestController$$FastClassBySpringCGLIB$$4cba5d1.invoke(<generated>)\n\tat com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)\n\tat com.dodannie.blog.controller.TestController$$EnhancerBySpringCGLIB$$586d0b8c.testException(<generated>)\n","logMethod":"GET","logParams":"[2]","logStatus":0,"logTime":0,"logUrl":"/test/testException/2"},{"createdTime":"2020-06-15 00:05:39","logId":4,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功\"}","logStatus":1,"logTime":12,"logUrl":"/test/testException/1"},{"createdTime":"2020-06-15 00:05:40","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功\"}","logStatus":1,"logTime":15,"logUrl":"/test/testException/1"},{"createdTime":"2020-06-15 21:33:05","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":70,"logUrl":"/admin/login"},{"createdTime":"2020-06-15 21:33:35","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":67,"logUrl":"/admin/login"},{"createdTime":"2020-06-15 21:33:52","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":24,"logUrl":"/admin/login"},{"createdTime":"2020-06-15 21:38:35","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=dodannie, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":2166,"logUrl":"/admin/login"},{"createdTime":"2020-06-15 21:38:53","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=dodannie, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":58,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":163,"totalPage":17},"msg":"操作成功"}
2020-06-29 18:53:29.494 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /about/getByPage
2020-06-29 18:53:29.494 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:53:29.495 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:53:29.495 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AboutController.getByPage
2020-06-29 18:53:29.495 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:53:29.557 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 63
2020-06-29 18:53:29.557 INFO  [http-nio-1000-exec-5]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:53:40.320 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /about/save
2020-06-29 18:53:40.320 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:53:40.320 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:53:40.320 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AboutController.save
2020-06-29 18:53:40.321 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[About(aboutId=null, aboutTitle=23, aboutContent=<p>22222222222222222</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-06-29 18:53:40.360 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 40
2020-06-29 18:53:40.360 INFO  [http-nio-1000-exec-4]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"msg":"添加成功！"}
2020-06-29 18:53:40.570 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /about/getByPage
2020-06-29 18:53:40.570 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:53:40.570 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:53:40.570 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AboutController.getByPage
2020-06-29 18:53:40.570 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[About(aboutId=1, aboutTitle=测试关于, aboutContent=null, aboutRead=0, createdTime=2020-06-28 16:13:51, updateTime=2020-06-28 16:13:51, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:53:40.623 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 53
2020-06-29 18:53:40.623 INFO  [http-nio-1000-exec-6]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"},{"aboutId":2,"aboutRead":0,"aboutTitle":"23","createdTime":"2020-06-29 18:53:41","enable":0,"updateTime":"2020-06-29 18:53:41"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:53:45.712 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /about/delete/2
2020-06-29 18:53:45.712 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : DELETE
2020-06-29 18:53:45.713 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:53:45.713 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AboutController.delete
2020-06-29 18:53:45.713 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[2]
2020-06-29 18:53:45.753 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 41
2020-06-29 18:53:45.753 INFO  [http-nio-1000-exec-10]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"msg":"删除成功！"}
2020-06-29 18:53:46.101 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /about/getByPage
2020-06-29 18:53:46.102 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:53:46.102 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:53:46.102 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.AboutController.getByPage
2020-06-29 18:53:46.103 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[About(aboutId=1, aboutTitle=测试关于, aboutContent=null, aboutRead=0, createdTime=2020-06-28 16:13:51, updateTime=2020-06-28 16:13:51, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=23, aboutContent=null, aboutRead=0, createdTime=2020-06-29 18:53:41, updateTime=2020-06-29 18:53:41, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:53:46.153 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 52
2020-06-29 18:53:46.154 INFO  [http-nio-1000-exec-8]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:54:45.455 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/getByPage
2020-06-29 18:54:45.455 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : POST
2020-06-29 18:54:45.455 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:54:45.455 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.getByPage
2020-06-29 18:54:45.455 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-06-29 18:54:45.544 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 89
2020-06-29 18:54:45.545 INFO  [http-nio-1000-exec-9]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}
2020-06-29 18:54:47.633 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/get/1277133222783172608
2020-06-29 18:54:47.633 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:54:47.633 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:54:47.633 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.get
2020-06-29 18:54:47.633 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[1277133222783172608]
2020-06-29 18:54:47.659 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 26
2020-06-29 18:54:47.660 INFO  [http-nio-1000-exec-7]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p><strong>content132222222222222222</strong></p>","blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","blogType":6,"createdTime":"2020-06-28 14:54:24","version":2},"msg":"操作成功"}
2020-06-29 18:54:53.313 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /blog/get/1277133260989087744
2020-06-29 18:54:53.313 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:54:53.313 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:54:53.314 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.BlogController.get
2020-06-29 18:54:53.314 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[1277133260989087744]
2020-06-29 18:54:53.340 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 27
2020-06-29 18:54:53.341 INFO  [http-nio-1000-exec-3]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content2","blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","blogType":7,"createdTime":"2020-06-28 14:54:33","version":2},"msg":"操作成功"}
2020-06-29 18:59:04.002 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:105 -请求地址 : /type/listBack
2020-06-29 18:59:04.002 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:106 -请求方式 : GET
2020-06-29 18:59:04.002 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:109 -IP : 127.0.0.1
2020-06-29 18:59:04.002 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:111 -方法 : com.dodannie.blog.controller.TypeController.list
2020-06-29 18:59:04.003 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.printRequestLog:113 -请求参数：[]
2020-06-29 18:59:04.029 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAround:60 -耗时 : 27
2020-06-29 18:59:04.029 INFO  [http-nio-1000-exec-1]com.dodannie.blog.aspect.RequestAspect.doAfterReturning:74 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}
