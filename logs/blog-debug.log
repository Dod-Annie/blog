2020-06-30 09:44:19.734 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 09:44:59.005 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 09:44:59.085 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 09:44:59.105 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 09:44:59.106 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 09:44:59.106 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 09:44:59.112 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:44:59.167 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:44:59.168 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 09:44:59.169 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:44:59.170 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:44:59.183 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:44:59.197 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:44:59.200 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 222(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:44:59.232 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:44:59.237 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:44:59.239 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 239(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:44:59.243 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:44:59.244 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 09:44:59.264 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:44:59.270 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:56:41.261 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-06-30 09:56:41.261 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-06-30 09:56:41.284 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 2
2020-06-30 09:56:41.302 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:56:41.303 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 49(Long), {"code":20000,"data":[{"list":[{"blogId":"1277133260989087744","blogMonth":"2020-06","blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33"},{"blogId":"1277133222783172608","blogMonth":"2020-06","blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24"}],"month":"2020-06"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:56:41.332 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:56:44.977 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 09:56:44.978 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:56:44.992 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:56:44.993 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:56:44.994 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:56:45.007 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:56:45.057 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:56:45.058 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 96(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:56:45.085 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:57:07.261 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 09:57:07.261 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:57:07.275 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:57:07.276 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:57:07.276 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:57:07.289 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:57:07.339 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:57:07.340 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 91(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:57:07.367 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:57:40.725 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 09:57:40.726 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 09:57:40.728 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 09:57:40.729 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 09:57:40.735 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 09:57:40.735 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:57:40.740 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 09:57:40.749 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:57:40.751 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:57:40.751 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:57:40.758 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:57:40.758 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:57:40.759 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:57:40.952 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:57:40.952 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 09:57:40.968 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:57:40.983 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:57:41.001 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:57:41.002 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 278(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:57:41.037 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:58:06.869 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 09:58:06.870 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:58:06.885 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:58:06.886 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:58:06.886 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:58:06.898 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:58:06.951 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:58:06.953 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 95(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:58:06.981 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:58:11.601 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 09:58:11.601 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:58:11.617 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:58:11.618 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:58:11.618 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:58:11.631 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:58:11.682 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:58:11.683 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 93(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:58:11.710 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:58:16.517 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 09:58:16.518 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:58:16.532 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:58:16.533 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:58:16.534 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:58:16.547 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:58:16.599 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:58:16.599 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 93(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:58:16.627 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:59:11.931 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-06-30 09:59:11.932 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:59:11.947 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:59:11.948 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:59:11.949 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:59:11.962 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:59:12.011 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:59:12.011 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-29 18:47:00), BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 93(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:59:12.039 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:59:12.182 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2020-06-30 09:59:12.182 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:59:12.197 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:59:12.198 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:59:12.198 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:59:12.211 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:59:12.260 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:59:12.261 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-29 18:47:00), BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), null, POST(String), 92(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:59:12.289 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:59:12.788 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read desc limit ?, ? 
2020-06-30 09:59:12.788 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:59:12.801 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:59:12.802 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:59:12.802 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:59:12.813 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:59:12.860 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:59:12.860 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19), BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-29 18:47:00)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 85(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:59:12.887 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:59:14.376 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-06-30 09:59:14.377 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:59:14.390 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:59:14.390 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:59:14.391 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:59:14.402 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:59:14.449 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:59:14.451 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19), BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-29 18:47:00)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 84(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:59:14.477 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:59:15.516 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_collection desc limit ?, ? 
2020-06-30 09:59:15.517 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 09:59:15.530 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 09:59:15.531 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 09:59:15.532 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 09:59:15.544 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:59:15.590 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:59:15.591 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19), BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-29 18:47:00)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), null, POST(String), 86(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:59:15.624 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:59:19.513 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-30 09:59:19.513 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-30 09:59:19.525 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 2
2020-06-30 09:59:19.542 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:59:19.543 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:59:19.569 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:59:20.705 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? order by created_time desc limit ?, ? 
2020-06-30 09:59:20.706 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 6(String), 0(Integer), 10(Integer)
2020-06-30 09:59:20.719 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-06-30 09:59:20.721 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 and type_id = ? 
2020-06-30 09:59:20.721 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 6(String)
2020-06-30 09:59:20.733 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 09:59:20.779 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:59:20.779 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=6}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 95(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{"typeId":"6"},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:59:20.806 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 09:59:22.961 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-06-30 09:59:22.962 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-06-30 09:59:22.974 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 2
2020-06-30 09:59:22.990 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 09:59:22.990 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 30(Long), {"code":20000,"data":[{"list":[{"blogId":"1277133260989087744","blogMonth":"2020-06","blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33"},{"blogId":"1277133222783172608","blogMonth":"2020-06","blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24"}],"month":"2020-06"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 09:59:23.017 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:00:19.436 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 10:00:19.437 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 10:00:19.441 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 10:00:19.442 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 10:00:19.455 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 10:00:19.474 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:00:19.475 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 42(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:00:19.488 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:00:19.488 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:00:19.520 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:00:19.529 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:00:21.697 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 10:00:21.698 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 10:00:21.699 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 10:00:21.700 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 10:00:21.701 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 10:00:21.701 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 10:00:21.711 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 10:00:21.713 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 10:00:21.714 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 10:00:21.714 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 10:00:21.726 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:00:21.728 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 10:00:21.728 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:00:21.730 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:00:21.731 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:00:21.760 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:00:21.760 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:00:21.775 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:00:21.775 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 86(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:00:21.807 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:05:10.804 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 10:05:10.805 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 10:05:10.819 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 10:05:10.820 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 10:05:10.820 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 10:05:10.833 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 10:05:10.884 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:05:10.885 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 98(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:05:10.914 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:05:10.919 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 10:05:10.920 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 10:05:10.938 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 10:05:10.956 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:05:10.957 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 37(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:05:10.986 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:05:11.050 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 10:05:11.051 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 10:05:11.078 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:05:11.079 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:05:11.108 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:06:12.632 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 10:06:12.633 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 10:06:12.646 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 10:06:12.647 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 10:06:12.647 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 10:06:12.659 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 10:06:12.709 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:06:12.709 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 91(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:06:12.737 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:06:16.035 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 10:06:16.037 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 10:06:16.049 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 10:06:16.050 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 10:06:16.050 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 10:06:16.064 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 10:06:16.112 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:06:16.113 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 88(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:06:16.141 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:07:35.223 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 10:07:35.223 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 10:07:35.236 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 10:07:35.254 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:07:35.255 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 34(Long), {"code":20000,"data":{"token":"9D22275E0F079651AA75E230E68784A8"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:07:35.289 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:07:35.325 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:07:35.326 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","name":"dodannie","password":"","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:07:35.354 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:07:35.462 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-30 10:07:35.463 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-30 10:07:35.475 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 2
2020-06-30 10:07:35.490 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:07:35.490 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 28(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:07:35.518 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:07:38.645 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-06-30 10:07:38.646 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 10:07:38.657 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-06-30 10:07:38.671 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:07:38.672 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 27(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:07:38.697 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:07:45.224 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 10:07:45.224 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 10:07:45.237 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 10:07:45.253 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:07:45.253 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:07:45.281 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:07:48.404 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-06-30 10:07:48.405 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 10:07:48.417 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-06-30 10:07:48.430 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-06-30 10:07:48.431 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 10:07:48.442 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 10:07:48.457 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:07:48.458 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 57(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-06-28 19:00:47","name":"张馨恬","nickname":"马鞍山丶神烦喵","sex":2,"updateTime":"2020-06-28 19:00:47","userEmail":"xxx","userId":3,"username":"zxt"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:07:48.485 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:07:54.751 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-06-30 10:07:54.751 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-06-30 10:07:54.764 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-06-30 10:07:54.779 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:07:54.779 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 29(Long), {"code":20000,"data":{"name":"张馨恬","nickname":"马鞍山丶神烦喵","sex":2,"userEmail":"xxx","userId":3,"username":"zxt","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:07:54.808 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:08:38.664 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:08:38.664 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@69282449, org.apache.catalina.session.StandardSessionFacade@4c5b1002](String), 1(Integer), null, POST(String), 561(Long), {"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/30/f1ac8c5a-6af4-4bca-96f8-67c5adcfc1b2.png","msg":"上传成功！"}(String), 127.0.0.1(String)
2020-06-30 10:08:38.690 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:08:41.497 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? ,user_email = ? where user_id = ? and version = ? 
2020-06-30 10:08:41.498 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.UserMapper.update.debug:159 -==> Parameters: zxt(String), 张馨恬(String), 2(Integer), https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/30/f1ac8c5a-6af4-4bca-96f8-67c5adcfc1b2.png(String), 马鞍山丶神烦喵(String), xxx(String), 3(Integer), 1(Integer)
2020-06-30 10:08:41.524 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-06-30 10:08:41.539 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:08:41.539 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=3, username=zxt, password=null, name=张馨恬, sex=2, header=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/30/f1ac8c5a-6af4-4bca-96f8-67c5adcfc1b2.png, nickname=马鞍山丶神烦喵, userEmail=xxx, createdTime=null, updateTime=null, version=1, deleted=null)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), PUT(String), 43(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-06-30 10:08:41.567 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:08:41.902 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-06-30 10:08:41.902 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 10:08:41.914 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-06-30 10:08:41.928 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-06-30 10:08:41.928 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 10:08:41.940 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 10:08:41.953 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:08:41.955 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=3, username=zxt, password=null, name=张馨恬, sex=2, header=null, nickname=马鞍山丶神烦喵, userEmail=xxx, createdTime=2020-06-28 19:00:47, updateTime=2020-06-28 19:00:47, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 54(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-06-28 19:00:47","header":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/30/f1ac8c5a-6af4-4bca-96f8-67c5adcfc1b2.png","name":"张馨恬","nickname":"马鞍山丶神烦喵","sex":2,"updateTime":"2020-06-30 10:08:42","userEmail":"xxx","userId":3,"username":"zxt"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:08:41.979 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:12:56.900 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2020-06-30 10:12:56.901 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 10:12:56.994 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 10:12:56.994 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 10:12:56.995 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 10:12:57.087 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 10:12:57.724 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:12:57.724 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-29 18:47:00), BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 876(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:12:58.047 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 10:12:58.258 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 10:12:58.259 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 10:12:58.351 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 10:12:58.351 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 10:12:58.352 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 10:12:58.446 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 10:12:58.803 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 10:12:58.804 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-29 18:47:00), BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2e18b2b5.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 1536(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 10:13:00.142 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:08:31.838 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 11:08:46.858 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:08:46.876 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 11:08:46.903 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:08:46.978 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:08:46.982 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 83(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:08:47.015 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:09:22.293 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:09:22.294 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 11:09:22.305 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:09:22.324 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:09:22.325 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 31(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:09:22.351 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:09:29.625 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:09:29.626 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 11:09:29.638 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:09:29.653 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:09:29.654 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 29(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:09:29.681 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:09:39.801 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:09:39.802 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: 张馨恬(String)
2020-06-30 11:09:39.815 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:09:39.834 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:09:39.835 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=张馨恬, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 32(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:09:39.863 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:09:41.131 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:09:41.131 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: 张馨恬(String)
2020-06-30 11:09:41.144 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:09:41.160 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:09:41.161 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=张馨恬, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 30(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:09:41.190 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:09:41.609 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:09:41.610 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: 张馨恬(String)
2020-06-30 11:09:41.623 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:09:41.640 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:09:41.641 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=张馨恬, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 31(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:09:41.669 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:09:41.757 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:09:41.758 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: 张馨恬(String)
2020-06-30 11:09:41.770 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:09:41.787 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:09:41.788 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=张馨恬, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 32(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:09:41.816 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:09:50.346 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:09:50.347 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: 张馨恬(String)
2020-06-30 11:09:50.358 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:09:50.374 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:09:50.375 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=张馨恬, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 28(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:09:50.401 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:10:04.636 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:10:04.637 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 11:10:04.649 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:10:04.665 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:10:04.666 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 31(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:10:04.693 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:10:38.356 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:10:38.357 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:10:38.371 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 11:10:38.396 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:10:38.396 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), java.lang.ClassCastException: com.dodannie.blog.pojo.Admin cannot be cast to com.dodannie.blog.pojo.User
	at com.dodannie.blog.controller.UserController.login(UserController.java:161)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$447219d7.login(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:10:38.427 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:11:04.552 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:11:04.553 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: dodannie(String)
2020-06-30 11:11:04.565 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:11:04.582 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:11:04.582 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=dodannie, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 29(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:11:04.611 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:12:26.756 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:12:26.756 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:12:26.769 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 11:12:26.785 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:12:26.785 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), java.lang.ClassCastException: com.dodannie.blog.pojo.Admin cannot be cast to com.dodannie.blog.pojo.User
	at com.dodannie.blog.controller.UserController.login(UserController.java:161)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$447219d7.login(<generated>)
(String), POST(String), 0(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:12:26.815 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:12:33.909 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:12:33.910 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 11:12:33.923 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:12:33.939 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:12:33.939 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 31(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:12:33.967 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:12:48.210 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:12:48.211 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 11:12:48.222 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:12:48.239 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:12:48.240 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 34(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-06-30 11:12:48.266 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:14:01.171 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 11:14:03.213 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 11:14:36.500 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 11:14:36.522 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 11:14:36.556 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 11:14:36.644 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:14:36.648 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 110(Long), {"code":20000,"data":{"user":{"header":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/30/f1ac8c5a-6af4-4bca-96f8-67c5adcfc1b2.png","nickname":"马鞍山丶神烦喵","password":"","sex":2,"userEmail":"xxx","userId":3,"username":"zxt"},"token":"A84362E5B57F36A054AF68EAF94C505C"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:14:36.680 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:14:37.349 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 11:14:37.350 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 11:14:37.357 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 11:14:37.358 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 11:14:37.363 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 11:14:37.363 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 11:14:37.365 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 11:14:37.375 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 11:14:37.385 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 11:14:37.386 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 11:14:37.396 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:14:37.397 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 44(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:14:37.399 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:14:37.400 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 53(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:14:37.401 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 11:14:37.402 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 11:14:37.403 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 11:14:37.416 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 11:14:37.424 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:14:37.426 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:14:37.479 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:14:37.480 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 385(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:14:37.486 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:14:37.487 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$e4daebff.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:14:37.506 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:14:37.512 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:14:46.338 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-30 11:14:46.339 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1277133222783172608(String)
2020-06-30 11:14:46.354 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-30 11:14:46.356 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-06-30 11:14:46.357 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试博客1(String), https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png(String), <p><strong>content132222222222222222</strong></p>(String), 0(Integer), 1(Integer), 0(Integer), 6(Integer), 0(Integer), 1277133222783172608(String), 2(Integer)
2020-06-30 11:14:46.380 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-06-30 11:14:46.383 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-06-30 11:14:46.384 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 6(Integer)
2020-06-30 11:14:46.397 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-06-30 11:14:46.447 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:14:46.448 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1277133222783172608(String), [1277133222783172608](String), 1(Integer), null, GET(String), 124(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p><strong>content132222222222222222</strong></p>","blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:14:46.473 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:14:54.719 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 11:14:54.721 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 11:14:54.735 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 11:14:54.736 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 11:14:54.737 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 11:14:54.749 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 11:14:54.795 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:14:54.796 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 87(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:14:54.822 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:16.675 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:16.676 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getGood/1277133222783172608(String), [1277133222783172608](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:146)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7558106.getGoodsCount(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7aa20a62.getGoodsCount(<generated>)
	at com.dodannie.blog.controller.BlogController.getGood(BlogController.java:184)
	at com.dodannie.blog.controller.BlogController$$FastClassBySpringCGLIB$$fa64fce1.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$94350c88.getGood(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:15:16.676 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:16.677 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollection/1277133222783172608(String), [1277133222783172608](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:173)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7558106.getCollectionCount(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7aa20a62.getCollectionCount(<generated>)
	at com.dodannie.blog.controller.BlogController.getCollection(BlogController.java:211)
	at com.dodannie.blog.controller.BlogController$$FastClassBySpringCGLIB$$fa64fce1.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$94350c88.getCollection(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:15:16.702 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:16.708 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:25.964 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:25.965 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.dodannie.blog.controller.UserController.commentAndCollectionCount(UserController.java:176)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$1c68fce3.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:15:25.990 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:38.301 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:38.302 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollectionList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7558106.getCollectionByPage(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7aa20a62.getCollectionByPage(<generated>)
	at com.dodannie.blog.controller.BlogController.getCollectionList(BlogController.java:223)
	at com.dodannie.blog.controller.BlogController$$FastClassBySpringCGLIB$$fa64fce1.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$94350c88.getCollectionList(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), POST(String), 0(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:15:38.332 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:40.657 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:40.658 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.dodannie.blog.controller.UserController.commentAndCollectionCount(UserController.java:176)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$1c68fce3.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:15:40.686 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:41.824 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:41.825 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollectionList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7558106.getCollectionByPage(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7aa20a62.getCollectionByPage(<generated>)
	at com.dodannie.blog.controller.BlogController.getCollectionList(BlogController.java:223)
	at com.dodannie.blog.controller.BlogController$$FastClassBySpringCGLIB$$fa64fce1.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$94350c88.getCollectionList(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:15:41.852 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:43.205 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:43.206 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollectionList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7558106.getCollectionByPage(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7aa20a62.getCollectionByPage(<generated>)
	at com.dodannie.blog.controller.BlogController.getCollectionList(BlogController.java:223)
	at com.dodannie.blog.controller.BlogController$$FastClassBySpringCGLIB$$fa64fce1.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$94350c88.getCollectionList(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), POST(String), 0(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p><strong>content132222222222222222</strong></p>","blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:15:43.234 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:44.527 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 11:15:44.528 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 11:15:44.540 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 11:15:44.541 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 11:15:44.541 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 11:15:44.553 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 11:15:44.601 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:44.601 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 85(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:15:44.626 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:44.839 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:44.842 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.dodannie.blog.controller.UserController.commentAndCollectionCount(UserController.java:176)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$1c68fce3.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:15:44.871 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:55.279 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:55.280 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 0(Integer), java.lang.ClassCastException: com.dodannie.blog.pojo.User cannot be cast to com.dodannie.blog.pojo.Admin
	at com.dodannie.blog.controller.AdminController.getLoginInfo(AdminController.java:63)
	at com.dodannie.blog.controller.AdminController$$FastClassBySpringCGLIB$$b5ab7ca8.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.AdminController$$EnhancerBySpringCGLIB$$6877203d.getLoginInfo(<generated>)
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:15:55.307 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:58.324 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 11:15:58.324 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:15:58.338 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:15:58.355 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:58.356 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.dodannie.blog.controller.UserController.commentAndCollectionCount(UserController.java:176)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$1c68fce3.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), POST(String), 34(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 127.0.0.1(String)
2020-06-30 11:15:58.387 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:15:59.200 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 11:15:59.201 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:15:59.213 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:15:59.230 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:15:59.231 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7558106.getCollectionByPage(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$7aa20a62.getCollectionByPage(<generated>)
	at com.dodannie.blog.controller.BlogController.getCollectionList(BlogController.java:223)
	at com.dodannie.blog.controller.BlogController$$FastClassBySpringCGLIB$$fa64fce1.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$94350c88.getCollectionList(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), POST(String), 32(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 127.0.0.1(String)
2020-06-30 11:15:59.259 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:16:02.198 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 11:16:02.199 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:16:02.211 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:16:02.228 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:16:02.229 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.dodannie.blog.controller.UserController.commentAndCollectionCount(UserController.java:176)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$1c68fce3.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), POST(String), 31(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 127.0.0.1(String)
2020-06-30 11:16:02.257 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:16:16.939 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 11:16:27.098 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 11:16:27.116 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:16:27.143 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:16:27.210 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:16:27.213 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 81(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 127.0.0.1(String)
2020-06-30 11:16:27.240 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:16:44.762 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 11:16:44.763 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:16:44.774 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:16:44.790 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:16:44.791 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 29(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 127.0.0.1(String)
2020-06-30 11:16:44.817 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:17:02.089 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 11:17:02.090 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:17:02.102 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:17:02.120 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:17:02.120 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 30(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 127.0.0.1(String)
2020-06-30 11:17:02.147 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:23:52.383 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 11:33:20.473 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 11:33:20.498 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:33:20.529 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-30 11:33:26.280 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 11:34:15.960 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 11:34:26.775 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 11:34:26.792 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 11:34:26.821 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 11:34:26.899 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:34:26.901 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 99(Long), {"code":20000,"data":{"token":"F3888C7150EDFD1BAA522387FA22124A"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:34:26.933 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:34:27.005 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:34:27.006 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","name":"dodannie","password":"","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:34:27.032 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:34:27.512 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-30 11:34:27.512 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-30 11:34:27.524 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 2
2020-06-30 11:34:27.540 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist, url, cover, created_time, enabled from bl_music where deleted = 0 limit ?, ? 
2020-06-30 11:34:27.541 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 11:34:27.542 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:34:27.543 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:34:27.570 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:34:27.622 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:34:27.622 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
### The error may involve com.dodannie.blog.mapper.MusicMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getByPage(MusicServiceImpl.java:66)
	at com.dodannie.blog.controller.MusicController.getByPage(MusicController.java:121)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$7c4c5fb3.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:34:27.650 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:34:39.074 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-06-30 11:34:39.075 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 11:34:39.089 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-06-30 11:34:39.105 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:34:39.105 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:34:39.134 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:36:04.225 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:36:04.227 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), java.lang.ClassCastException: com.dodannie.blog.pojo.Admin cannot be cast to com.dodannie.blog.pojo.User
	at com.dodannie.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:111)
	at com.dodannie.blog.controller.UserController.commentAndCollectionCount(UserController.java:176)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$b3da7097.commentAndCollectionCount(<generated>)
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:36:04.236 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 11:36:04.237 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 11:36:04.244 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 11:36:04.245 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 11:36:04.250 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 11:36:04.258 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:36:04.443 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 11:36:04.450 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:36:04.452 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:36:04.471 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:36:04.471 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 226(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:36:04.484 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:36:04.508 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:36:04.517 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 11:36:04.518 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 11:36:04.550 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:36:04.551 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$7c4c5fb3.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:36:04.581 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:36:22.548 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:36:22.549 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), java.lang.ClassCastException: com.dodannie.blog.pojo.Admin cannot be cast to com.dodannie.blog.pojo.User
	at com.dodannie.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:111)
	at com.dodannie.blog.controller.UserController.commentAndCollectionCount(UserController.java:176)
	at com.dodannie.blog.controller.UserController$$FastClassBySpringCGLIB$$5c5359ca.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UserController$$EnhancerBySpringCGLIB$$b3da7097.commentAndCollectionCount(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":{"token":"F3888C7150EDFD1BAA522387FA22124A"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:36:22.572 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 11:36:22.573 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 11:36:22.577 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 11:36:22.577 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 11:36:22.610 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 11:36:22.616 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 11:36:22.624 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:36:22.649 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:36:22.650 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 91(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:36:22.651 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:36:22.652 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 95(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 11:36:22.741 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:36:22.746 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 11:36:22.843 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 11:36:22.844 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 11:36:22.922 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 11:36:22.922 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$7c4c5fb3.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 11:36:22.980 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:25:18.111 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 14:28:31.391 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 14:28:31.403 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 14:28:31.413 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 14:28:31.443 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 14:28:31.443 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 14:28:31.443 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 14:28:31.506 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 14:28:31.515 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 14:28:31.534 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:31.542 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 144(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:31.557 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:31.559 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 220(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:31.571 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:31.588 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:31.610 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:31.612 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$94e7c81a.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 14:28:31.631 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 14:28:31.631 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 14:28:31.645 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 14:28:31.646 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 14:28:31.647 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 14:28:31.649 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:31.660 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 14:28:32.015 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:32.018 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 147(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:32.046 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:42.369 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 14:28:42.369 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 14:28:42.382 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 14:28:42.383 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 14:28:42.384 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 14:28:42.396 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 14:28:42.445 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:42.447 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 86(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:42.474 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:54.531 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 14:28:54.531 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 14:28:54.543 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 14:28:54.565 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:54.566 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"user":{"header":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/30/f1ac8c5a-6af4-4bca-96f8-67c5adcfc1b2.png","nickname":"马鞍山丶神烦喵","password":"","sex":2,"userEmail":"xxx","userId":3,"username":"zxt"},"token":"0ADCF2FF3DFEEED158A37EA198378955"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:54.590 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:54.889 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 14:28:54.891 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 14:28:54.912 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 14:28:54.913 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 14:28:54.914 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 14:28:54.937 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 14:28:54.945 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 14:28:54.946 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 14:28:54.973 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 14:28:54.985 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 14:28:54.986 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 14:28:55.009 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:55.010 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 59(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:55.017 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 14:28:55.019 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 14:28:55.020 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 14:28:55.026 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 14:28:55.027 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 14:28:55.049 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:55.050 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$94e7c81a.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 63(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:55.051 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:55.051 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 159(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:55.055 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 14:28:55.067 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:55.082 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:55.083 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$94e7c81a.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:55.089 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:28:55.090 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 65(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 14:28:55.107 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:55.110 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:55.124 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:28:55.127 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 14:29:09.554 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 14:29:09.555 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlog/1277133260989087744(String), [1277133260989087744](String), 0(Integer), org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.dodannie.blog.service.impl.CommentServiceImpl.getByBlog(CommentServiceImpl.java:72)
	at com.dodannie.blog.controller.CommentController.getByBlog(CommentController.java:59)
	at com.dodannie.blog.controller.CommentController$$FastClassBySpringCGLIB$$293a3078.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.CommentController$$EnhancerBySpringCGLIB$$cad6f9c8.getByBlog(<generated>)
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 14:29:09.584 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:18:39.507 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 15:18:57.244 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 15:18:57.277 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 15:18:57.312 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 15:18:57.313 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 15:18:57.316 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 15:18:57.317 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 15:18:57.329 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 15:18:57.335 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 15:18:57.356 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:18:57.365 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 51(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:18:57.370 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:18:57.372 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 166(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:18:57.392 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:18:57.408 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:18:57.426 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 15:18:57.428 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 15:18:57.444 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 15:18:57.445 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 15:18:57.446 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 15:18:57.461 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 15:18:57.477 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:18:57.478 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$ef6d1346.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 15:18:57.507 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:18:57.520 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:18:57.523 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 178(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:18:57.851 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:19:11.103 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 15:19:11.106 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 15:19:11.122 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 15:19:11.123 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 15:19:11.124 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 15:19:11.138 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 15:19:11.201 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:19:11.203 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 110(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:19:11.233 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:19:11.344 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 15:19:11.345 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 15:19:11.346 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 15:19:11.347 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 15:19:11.349 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 15:19:11.350 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 15:19:11.363 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 15:19:11.363 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 15:19:11.386 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:19:11.389 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:19:11.390 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$ef6d1346.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 15:19:11.391 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 45(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:19:11.391 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:19:11.393 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 45(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:19:11.419 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:19:11.423 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:19:11.427 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:30:38.650 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 15:30:53.230 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 15:30:53.262 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 15:30:53.303 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 15:30:53.304 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 15:30:53.306 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 15:30:53.307 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 15:30:53.308 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 15:30:53.320 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 15:30:53.339 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:30:53.343 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:30:53.346 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:30:53.346 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 136(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:30:53.375 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:30:53.378 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:30:53.420 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:30:53.421 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2f247412.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 15:30:53.449 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:47:33.375 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 15:48:18.761 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 15:50:36.605 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 15:50:45.418 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-30 15:50:45.437 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: zxt(String)
2020-06-30 15:50:45.464 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 15:50:45.542 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:50:45.544 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=zxt, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 88(Long), {"code":20000,"data":{"user":{"header":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/30/f1ac8c5a-6af4-4bca-96f8-67c5adcfc1b2.png","nickname":"马鞍山丶神烦喵","password":"","sex":2,"userEmail":"xxx","userId":3,"username":"zxt"},"token":"DF797899F20DB9708EE4AAE090BB5794"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:50:45.570 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:50:45.918 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 15:50:45.918 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 15:50:45.934 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 15:50:45.935 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 15:50:45.935 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 15:50:45.947 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 15:50:46.000 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:50:46.001 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 116(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:50:46.035 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:50:46.049 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 15:50:46.050 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 15:50:46.056 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 15:50:46.057 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 15:50:46.058 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 15:50:46.059 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 15:50:46.060 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 15:50:46.061 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 15:50:46.071 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 15:50:46.077 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 15:50:46.079 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 15:50:46.098 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:50:46.100 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 48(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:50:46.297 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:50:46.298 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 50(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:50:46.300 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:50:46.301 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 59(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:50:46.311 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:50:46.324 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:50:46.326 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:50:46.387 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:50:46.389 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:76)
	at com.dodannie.blog.controller.MusicController.getList(MusicController.java:132)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$472b44ac.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-30 15:50:46.415 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:58:38.374 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 15:58:49.495 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 15:58:49.530 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 15:58:49.598 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 15:58:49.599 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 15:58:49.602 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 15:58:49.603 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 15:58:49.613 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 15:58:49.618 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 1
2020-06-30 15:58:49.632 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 15:58:49.642 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:58:49.650 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 66(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:58:49.653 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:58:49.655 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 70(Long), {"code":20000,"data":[{"artist":"jayChou","cover":"xxx","id":1,"name":"mojito","url":"xxx"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:58:49.664 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:58:49.665 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 15:58:49.665 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 190(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:58:49.666 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 15:58:49.678 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:58:49.683 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:58:49.684 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 15:58:49.687 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 15:58:49.688 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 15:58:49.694 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 15:58:49.701 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 15:58:49.757 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 15:58:49.759 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 189(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 15:58:49.786 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:18:13.227 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 16:18:36.084 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 16:18:51.089 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 16:18:51.089 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 16:18:51.120 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 16:18:51.120 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 16:18:51.157 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 16:18:51.159 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 16:18:51.162 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 16:18:51.163 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 16:18:51.175 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 1
2020-06-30 16:18:51.177 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 16:18:51.178 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 16:18:51.180 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 16:18:51.257 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 16:18:51.261 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 16:18:51.280 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 16:18:51.285 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 16:18:51.286 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 16:18:51.300 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:18:51.300 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 16:18:51.303 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 53(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:18:51.309 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:18:51.310 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 53(Long), {"code":20000,"data":[{"artist":"jayChou","cover":"xxx","id":1,"name":"mojito","url":"xxx"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:18:51.313 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:18:51.315 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 146(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:18:51.316 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:18:51.318 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 145(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:18:51.329 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:18:51.336 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:18:51.340 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:18:51.343 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:18:51.359 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:18:51.361 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 164(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:18:51.397 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:05.422 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 16:19:05.423 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 16:19:05.432 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 16:19:05.433 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 16:19:05.436 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 16:19:05.448 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 16:19:05.449 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 16:19:05.451 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 16:19:05.455 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:05.456 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 40(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:05.464 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 16:19:05.481 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:05.516 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:05.517 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 101(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:05.546 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:05.660 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 16:19:05.661 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 16:19:05.662 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 16:19:05.664 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 16:19:05.665 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 16:19:05.666 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 16:19:05.676 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 16:19:05.677 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 1
2020-06-30 16:19:05.678 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 16:19:05.701 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:05.702 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 46(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:05.703 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:05.704 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 46(Long), {"code":20000,"data":[{"artist":"jayChou","cover":"xxx","id":1,"name":"mojito","url":"xxx"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:05.706 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:05.706 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 47(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:05.729 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:05.732 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:05.732 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:13.220 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 16:19:13.221 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 16:19:13.229 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 16:19:13.231 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 16:19:13.233 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 16:19:13.245 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 16:19:13.246 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 16:19:13.247 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 16:19:13.249 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:13.250 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 32(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:13.258 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 16:19:13.276 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:13.306 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:13.307 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 91(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:13.332 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:13.434 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 16:19:13.435 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 16:19:13.448 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 16:19:13.468 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 16:19:13.469 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 16:19:13.470 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 16:19:13.471 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 16:19:13.472 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:13.473 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:13.483 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 1
2020-06-30 16:19:13.485 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 16:19:13.499 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:13.502 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:13.503 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 37(Long), {"code":20000,"data":[{"artist":"jayChou","cover":"xxx","id":1,"name":"mojito","url":"xxx"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:13.504 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:13.505 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 35(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:13.529 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:13.532 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:29.696 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 16:19:43.695 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 16:19:43.695 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 16:19:43.731 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 16:19:43.731 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 16:19:43.742 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 16:19:43.743 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 16:19:43.744 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 16:19:43.745 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 16:19:43.772 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 16:19:43.774 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 1
2020-06-30 16:19:43.774 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 16:19:43.780 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 16:19:43.819 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 16:19:43.820 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 16:19:43.835 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 16:19:43.836 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 16:19:43.837 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 16:19:43.850 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 16:19:43.874 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:43.877 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 57(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:43.883 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:43.884 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 133(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:43.885 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:43.885 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 58(Long), {"code":20000,"data":[{"artist":"jayChou","cover":"xxx","id":1,"name":"mojito","url":"xxx"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:43.886 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:43.888 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 139(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:43.906 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:43.910 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:19:43.911 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:43.913 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 133(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:19:43.914 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:43.914 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:19:43.941 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:21:47.467 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 16:22:07.366 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-30 16:22:07.366 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 16:22:07.389 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 16:22:07.390 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-30 16:22:07.430 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-30 16:22:07.438 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 2
2020-06-30 16:22:07.486 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-30 16:22:07.487 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-30 16:22:07.489 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-30 16:22:07.490 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-30 16:22:07.497 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-30 16:22:07.498 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-30 16:22:07.501 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 1
2020-06-30 16:22:07.503 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-30 16:22:07.512 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-30 16:22:07.513 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-30 16:22:07.514 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-30 16:22:07.526 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-30 16:22:07.551 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:22:07.554 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 51(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:22:07.562 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:22:07.564 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 116(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:22:07.565 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:22:07.567 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 126(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:22:07.568 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:22:07.570 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 52(Long), {"code":20000,"data":[{"artist":"jayChou","cover":"xxx","id":1,"name":"mojito","url":"xxx"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:22:07.584 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 16:22:07.585 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:22:07.585 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 154(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-30 11:14:47"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-30 16:22:07.592 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:22:07.594 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:22:07.597 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 16:22:07.616 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 22:23:40.158 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 22:24:28.566 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 22:24:28.661 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 22:24:28.726 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 22:24:29.552 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 22:24:29.559 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 989(Long), {"code":20000,"data":{"token":"FF863980D4D1F261A0F1A5E2280FC718"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-30 22:24:29.592 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 22:25:04.822 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 22:25:04.824 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 22:25:04.848 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 3
2020-06-30 22:25:04.886 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 22:25:04.889 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 91(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277960008499290112","blogRead":6,"blogTitle":"JavaScript在浏览器中的事件循环机制","createdTime":"2020-06-30 21:39:44","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-30 22:25:04.927 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 22:25:14.781 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getTop.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b where b.recommend = 1 and b.deleted = 0 
2020-06-30 22:25:14.783 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getTop.debug:159 -==> Parameters: 
2020-06-30 22:25:14.977 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 22:25:14.980 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTop(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
	at com.dodannie.blog.service.impl.BlogServiceImpl.getTop(BlogServiceImpl.java:125)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$bcaa9480.getTop(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$2ff71ddc.getTop(<generated>)
	at com.dodannie.blog.controller.BlogController.getTop(BlogController.java:169)
	at com.dodannie.blog.controller.BlogController$$FastClassBySpringCGLIB$$fa64fce1.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$59058f18.getTop(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'type_name' in 'field list'
(String), GET(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-30 22:25:15.015 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 22:31:02.415 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-30 22:31:20.372 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-30 22:31:20.430 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-30 22:31:20.493 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-30 22:31:21.586 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 22:31:21.596 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 1145(Long), {"code":20000,"data":{"token":"9EE2B8D8E73F55848F0380F80E854650"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-30 22:31:21.630 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 22:31:27.617 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2020-06-30 22:31:27.620 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-30 22:31:27.643 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 3
2020-06-30 22:31:27.705 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 22:31:27.708 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 97(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277960008499290112","blogRead":6,"blogTitle":"JavaScript在浏览器中的事件循环机制","createdTime":"2020-06-30 21:39:44","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":1,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go"}],"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-30 22:31:27.740 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 22:31:39.618 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getTop.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time from bl_blog as b where b.recommend = 1 and b.deleted = 0 
2020-06-30 22:31:39.619 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getTop.debug:159 -==> Parameters: 
2020-06-30 22:31:39.635 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.getTop.debug:159 -<==      Total: 0
2020-06-30 22:31:39.655 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 22:31:39.657 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTop(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":[],"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-30 22:31:39.689 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-30 22:33:17.138 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getTop.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time from bl_blog as b where b.recommend = 1 and b.deleted = 0 
2020-06-30 22:33:17.140 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getTop.debug:159 -==> Parameters: 
2020-06-30 22:33:17.157 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getTop.debug:159 -<==      Total: 1
2020-06-30 22:33:17.184 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-30 22:33:17.185 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTop(String), [](String), 1(Integer), null, GET(String), 55(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277960008499290112","blogRead":6,"blogTitle":"JavaScript在浏览器中的事件循环机制","createdTime":"2020-06-30 21:39:44"}],"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-30 22:33:17.350 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
