2020-06-23 21:08:58.381 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-23 21:11:15.609 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-23 21:11:15.664 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-23 21:11:15.713 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-23 21:11:17.063 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:11:17.071 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 1380(Long), {"code":20000,"data":{"token":"6C253481BA38753714BA4DF5637845DE"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 21:11:17.104 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 21:16:44.509 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-23 21:17:24.447 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-23 21:17:24.500 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-23 21:17:24.576 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-23 21:17:24.840 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:17:24.851 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 291(Long), {"code":20000,"data":{"token":"EAE2B118147D76781F0D5736C42B13EA"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 21:17:24.886 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 21:17:42.870 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and type_name = ? 
2020-06-23 21:17:42.875 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: JavaScript(String)
2020-06-23 21:17:42.893 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 0
2020-06-23 21:17:42.913 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-06-23 21:17:42.918 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: JavaScript(String)
2020-06-23 21:17:42.951 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-06-23 21:17:42.971 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:17:42.973 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/save(String), [Type(typeId=null, typeName=JavaScript, typeBlogCount=null, enable=null, deleted=null)](String), 1(Integer), null, POST(String), 347(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 21:17:43.006 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 21:18:20.599 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-23 21:19:13.712 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-23 21:19:13.771 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-23 21:19:13.887 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-23 21:19:13.939 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:19:13.951 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 296(Long), {"code":20000,"data":{"token":"3F39C7ACEC1247B0F22FC30EB12BA771"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 21:19:13.986 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 21:19:22.687 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and type_name = ? 
2020-06-23 21:19:22.689 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: JavaScript(String)
2020-06-23 21:19:22.703 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-06-23 21:19:22.740 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:19:22.743 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/save(String), [Type(typeId=null, typeName=JavaScript, typeBlogCount=null, enable=null, deleted=null)](String), 0(Integer), com.dodannie.blog.exception.BlogException: 该分类已存在！
	at com.dodannie.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:35)
	at com.dodannie.blog.controller.TypeController.save(TypeController.java:33)
	at com.dodannie.blog.controller.TypeController$$FastClassBySpringCGLIB$$d68cbe79.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.TypeController$$EnhancerBySpringCGLIB$$232f6334.save(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-23 21:19:22.776 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 21:20:00.225 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and type_name = ? 
2020-06-23 21:20:00.227 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: Go(String)
2020-06-23 21:20:00.243 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 0
2020-06-23 21:20:00.270 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-06-23 21:20:00.272 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: Go(String)
2020-06-23 21:20:00.301 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-06-23 21:20:00.322 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:20:00.325 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/save(String), [Type(typeId=null, typeName=Go, typeBlogCount=null, enable=null, deleted=null)](String), 1(Integer), null, POST(String), 114(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 21:20:00.354 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 21:46:00.994 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-23 21:47:34.502 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-23 21:47:34.576 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-23 21:47:34.653 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-23 21:47:34.712 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:47:34.738 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 279(Long), {"code":20000,"data":{"token":"83306795200EDEF7F7DE7751EF03456B"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 21:47:34.774 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 21:47:48.307 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-06-23 21:47:48.309 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-06-23 21:47:48.325 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-06-23 21:47:48.358 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:47:48.361 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 59(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaScript"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 21:47:48.393 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 21:52:33.499 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-23 21:52:33.502 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-23 21:52:33.520 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 2
2020-06-23 21:52:33.543 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 21:52:33.549 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2086(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":6,"typeName":"JavaScript"},{"typeBlogCount":0,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 21:52:33.581 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 22:01:18.770 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, enable = ? where type_id = ? 
2020-06-23 22:01:18.772 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: Javascript(String), 0(Integer), null
2020-06-23 22:01:18.799 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 0
2020-06-23 22:01:18.822 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 22:01:18.824 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/update(String), [Type(typeId=null, typeName=Javascript, typeBlogCount=null, enable=0, deleted=null)](String), 1(Integer), null, PUT(String), 2158(Long), {"code":20000,"msg":"更新成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 22:01:18.877 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 22:02:20.062 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, enable = ? where type_id = ? 
2020-06-23 22:02:20.066 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: Javascript(String), 0(Integer), 6(Integer)
2020-06-23 22:02:20.175 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-06-23 22:02:20.200 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 22:02:20.204 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/update(String), [Type(typeId=6, typeName=Javascript, typeBlogCount=null, enable=0, deleted=null)](String), 1(Integer), null, PUT(String), 182(Long), {"code":20000,"msg":"更新成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 22:02:20.266 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-23 22:02:44.100 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-23 22:02:44.102 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-23 22:02:44.141 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2020-06-23 22:02:44.168 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-23 22:02:44.169 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 90(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-23 22:02:44.209 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:48:44.561 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 14:50:21.279 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 14:50:21.299 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: test(String)
2020-06-28 14:50:21.328 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-28 14:50:21.345 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:50:21.348 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=test, password=123456)](String), 1(Integer), null, POST(String), 93(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 14:50:21.373 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:50:30.819 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 14:50:30.819 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: dodannie(String)
2020-06-28 14:50:30.830 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-28 14:50:30.846 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:50:30.848 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=dodannie, password=123456)](String), 1(Integer), null, POST(String), 30(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 14:50:30.872 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:50:48.784 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 14:50:48.785 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: dodannie(String)
2020-06-28 14:50:48.797 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 0
2020-06-28 14:50:48.815 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:50:48.816 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=dodannie, password=123456)](String), 1(Integer), null, POST(String), 31(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 14:50:48.843 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:51:24.603 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 14:51:24.603 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-28 14:51:24.617 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-28 14:51:24.637 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:51:24.638 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"token":"19B0001DA66CFE3161480771A3F1BF18"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 14:51:24.664 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:54:22.958 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog( blog_id, blog_title,blog_image, blog_content, blog_type, blog_remark, blog_source ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:54:22.960 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -==> Parameters: 1277133222783172608(String), 测试博客1(String), null, content1(String), 6(Integer), null, null
2020-06-28 14:54:22.982 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:54:22.982 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-06-28 14:54:22.983 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 6(Integer)
2020-06-28 14:54:22.994 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-06-28 14:54:23.009 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-06-28 14:54:23.011 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: Javascript(String), 1(Integer), 0(Integer), 6(Integer)
2020-06-28 14:54:23.033 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-06-28 14:54:23.082 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:54:23.083 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=null, blogTitle=测试博客1, blogImage=null, blogContent=content1, blogGoods=null, blogRead=null, blogCollection=null, blogType=6, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 152(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 14:54:23.108 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:54:32.066 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog( blog_id, blog_title,blog_image, blog_content, blog_type, blog_remark, blog_source ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:54:32.066 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -==> Parameters: 1277133260989087744(String), 测试博客2(String), null, content2(String), 7(Integer), null, null
2020-06-28 14:54:32.094 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:54:32.095 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-06-28 14:54:32.096 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 7(Integer)
2020-06-28 14:54:32.113 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-06-28 14:54:32.114 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-06-28 14:54:32.115 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: Go(String), 1(Integer), 1(Integer), 7(Integer)
2020-06-28 14:54:32.142 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-06-28 14:54:32.201 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:54:32.202 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=null, blogTitle=测试博客2, blogImage=null, blogContent=content2, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 153(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 14:54:32.229 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:54:35.108 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog( blog_id, blog_title,blog_image, blog_content, blog_type, blog_remark, blog_source ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:54:35.109 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -==> Parameters: 1277133273752354816(String), 测试博客2(String), null, content2(String), 3(Integer), null, null
2020-06-28 14:54:35.130 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.BlogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 14:54:35.131 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-06-28 14:54:35.132 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-06-28 14:54:35.146 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 0
2020-06-28 14:54:35.220 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 14:54:35.221 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=null, blogTitle=测试博客2, blogImage=null, blogContent=content2, blogGoods=null, blogRead=null, blogCollection=null, blogType=3, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), 	at com.dodannie.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:56)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$34c46d23.save(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$e258d22d.invoke(<generated>)
	at com.dodannie.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$a810f67f.save(<generated>)
	at com.dodannie.blog.controller.BlogController.save(BlogController.java:44)
	at com.dodannie.blog.controller.BlogController$$FastClassBySpringCGLIB$$fa64fce1.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.BlogController$$EnhancerBySpringCGLIB$$381bacdb.save(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-28 14:54:35.247 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 15:38:01.889 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 15:42:06.813 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 15:42:38.694 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 15:43:20.688 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 15:43:20.707 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-28 15:43:20.738 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-28 15:43:20.818 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 15:43:20.821 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 94(Long), {"code":20000,"data":{"token":"8A1E8250AB3E1C84C13E35114A0C511D"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 15:43:20.852 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 15:44:16.472 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.save.debug:159 -==>  Preparing: insert into bl_about(about_title, about_content) values( ?, ? ) 
2020-06-28 15:44:16.473 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.save.debug:159 -==> Parameters: 测试关于(String), 关于内容(String)
2020-06-28 15:44:16.571 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 15:44:16.572 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=测试关于, aboutContent=关于内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.dodannie.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.dodannie.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:34)
	at com.dodannie.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$5eb2332e.invoke(<generated>)
	at com.dodannie.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$e913b6ed.save(<generated>)
	at com.dodannie.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$5eb2332e.invoke(<generated>)
	at com.dodannie.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$92adcabf.save(<generated>)
	at com.dodannie.blog.controller.AboutController.save(AboutController.java:39)
	at com.dodannie.blog.controller.AboutController$$FastClassBySpringCGLIB$$a8a5e766.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.AboutController$$EnhancerBySpringCGLIB$$b5baeac1.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-28 15:44:16.603 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 16:13:03.049 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 16:13:37.220 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 16:13:37.239 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-28 16:13:37.267 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-28 16:13:37.344 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 16:13:37.348 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 92(Long), {"code":20000,"data":{"token":"E7668527549F40AFB07BF0ED97B684B2"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 16:13:37.376 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 16:13:49.314 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.save.debug:159 -==>  Preparing: insert into bl_about(about_title, about_content) values( ?, ? ) 
2020-06-28 16:13:49.315 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.save.debug:159 -==> Parameters: 测试关于(String), 关于内容(String)
2020-06-28 16:13:49.343 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.save.debug:159 -<==    Updates: 1
2020-06-28 16:13:49.357 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 16:13:49.358 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=测试关于, aboutContent=关于内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 1(Integer), null, POST(String), 49(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 16:13:49.386 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 16:15:04.670 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 16:15:04.672 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=create_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 1(Long), {"code":40005,"msg":"排序参数不合法！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 16:15:04.700 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 16:15:21.624 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-06-28 16:15:21.626 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 2(Integer)
2020-06-28 16:15:21.640 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-06-28 16:15:21.653 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-28 16:15:21.654 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-28 16:15:21.666 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-28 16:15:21.689 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 16:15:21.689 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 77(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":2,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 16:15:21.719 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:05:37.359 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 18:06:05.538 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 18:06:05.559 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-28 18:06:05.589 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-28 18:06:05.669 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:06:05.672 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 97(Long), {"code":20000,"data":{"token":"88B0E95A6C039635119C8C974F911370"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 18:06:05.702 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:06:11.617 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-06-28 18:06:11.618 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 2(Integer)
2020-06-28 18:06:11.634 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-06-28 18:06:11.650 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-28 18:06:11.651 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-28 18:06:11.665 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-28 18:06:11.689 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:06:11.690 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 93(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":2,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 18:06:11.719 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:06:20.532 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-06-28 18:06:20.533 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 2(Integer)
2020-06-28 18:06:20.549 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-06-28 18:06:20.567 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-28 18:06:20.568 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-28 18:06:20.582 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-28 18:06:20.600 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:06:20.601 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 67(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":2,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 18:06:20.630 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:06:28.414 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 order by created_time desc limit ?, ? 
2020-06-28 18:06:28.414 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 2(Integer)
2020-06-28 18:06:28.428 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-06-28 18:06:28.443 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-28 18:06:28.443 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-28 18:06:28.456 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-28 18:06:28.471 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:06:28.472 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 60(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":2,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 18:06:28.502 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:06:39.134 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_logs order by created_time desc limit ?, ? 
2020-06-28 18:06:39.134 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 2(Integer)
2020-06-28 18:06:39.217 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:06:39.217 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'blog.bl_logs' doesn't exist
### The error may involve com.dodannie.blog.mapper.LogMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Table 'blog.bl_logs' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'blog.bl_logs' doesn't exist
	at com.dodannie.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:40)
	at com.dodannie.blog.controller.LogController.getByPage(LogController.java:50)
	at com.dodannie.blog.controller.LogController$$FastClassBySpringCGLIB$$f64de19d.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.LogController$$EnhancerBySpringCGLIB$$b2add6a8.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Table 'blog.bl_logs' doesn't exist
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-28 18:06:39.247 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:21:18.823 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 18:21:33.748 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 18:21:33.768 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-28 18:21:33.798 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-28 18:21:33.817 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:21:33.819 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 90(Long), {"code":20000,"data":{"token":"E250D18F9023EBAB29BCA5D3F92202B8"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 18:21:33.846 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:21:38.364 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log order by created_time desc limit ?, ? 
2020-06-28 18:21:38.365 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 2(Integer)
2020-06-28 18:21:38.380 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-28 18:21:38.394 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-06-28 18:21:38.395 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-28 18:21:38.407 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-28 18:21:38.428 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:21:38.429 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 81(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-06-28 18:21:35","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"E250D18F9023EBAB29BCA5D3F92202B8\"},\"msg\":\"操作成功\"}","logStatus":1,"logTime":90,"logUrl":"/admin/login"},{"createdTime":"2020-06-28 18:06:41","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'blog.bl_logs' doesn't exist\n### The error may involve com.dodannie.blog.mapper.LogMapper.getByPage-Inline\n### Cause: java.sql.SQLSyntaxErrorException: Table 'blog.bl_logs' doesn't exist\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'blog.bl_logs' doesn't exist\n\tat com.dodannie.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:40)\n\tat com.dodannie.blog.controller.LogController.getByPage(LogController.java:50)\n\tat com.dodannie.blog.controller.LogController$$FastClassBySpringCGLIB$$f64de19d.invoke(<generated>)\n\tat com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)\n\tat com.dodannie.blog.controller.LogController$$EnhancerBySpringCGLIB$$b2add6a8.getByPage(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: Table 'blog.bl_logs' doesn't exist\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]","logStatus":0,"logTime":0,"logUrl":"/log/getByPage"}],"pageSize":2,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":69,"totalPage":35},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 18:21:38.460 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:45:07.914 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 18:46:16.613 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 18:46:16.634 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-28 18:46:16.665 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-28 18:46:16.741 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:46:16.745 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 100(Long), {"code":20000,"data":{"token":"26EB8194E6A6E152F88FA36DA5F054E8"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 18:46:16.774 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:46:24.313 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.save.debug:159 -==>  Preparing: insert into bl_music(name, artist, url, cover, lrc) values ( ?, ?, ?, ?, ? ) 
2020-06-28 18:46:24.314 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.save.debug:159 -==> Parameters: mojito(String), jayChou(String), xxx(String), xxx(String), null
2020-06-28 18:46:24.341 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.MusicMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:46:24.355 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 18:46:24.356 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/save(String), [Music(id=null, name=mojito, artist=jayChou, url=xxx, cover=xxx, lrc=null, createdTime=null, enabled=null, deleted=null)](String), 1(Integer), null, POST(String), 45(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 18:46:24.382 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 18:58:51.159 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-28 19:00:39.976 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-28 19:00:39.994 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-28 19:00:40.026 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-28 19:00:40.102 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 19:00:40.106 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 96(Long), {"code":20000,"data":{"token":"BFAB420310F3EC9BC0D183890B2E7317"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 19:00:40.135 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-28 19:00:45.514 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 19:00:45.516 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.save.debug:159 -==> Parameters: zxt(String), 123456(String), 张馨恬(String), 2(Integer), null, 马鞍山丶神烦喵(String), xxx(String)
2020-06-28 19:00:45.543 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-06-28 19:00:45.558 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-28 19:00:45.558 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/save(String), [User(userId=null, username=zxt, password=123456, name=张馨恬, sex=2, header=null, nickname=马鞍山丶神烦喵, userEmail=xxx, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 46(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-28 19:00:45.586 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
