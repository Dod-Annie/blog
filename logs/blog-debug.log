2020-06-29 17:49:18.473 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 17:50:22.748 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 17:52:25.049 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 17:52:25.070 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 17:52:25.101 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 17:52:25.121 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 17:52:25.124 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 97(Long), {"code":40002,"msg":"用户名或密码错误！！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 17:52:25.156 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 17:52:56.191 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 17:52:56.192 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 17:52:56.204 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 17:52:56.220 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 17:52:56.221 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 28(Long), {"code":20000,"data":{"token":"AFD360580C40079D8026A8260737AFE4"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 17:52:56.249 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 17:55:07.238 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 17:55:07.239 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/tengxun(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@715846b5, org.apache.catalina.session.StandardSessionFacade@77cc1d5f](String), 0(Integer), com.qcloud.cos.exception.CosClientException: please make sure bucket name must contain legal appid when appid is missing. example: music-1251122334
	at com.dodannie.blog.controller.UploadController.Upload(UploadController.java:85)
	at com.dodannie.blog.controller.UploadController$$FastClassBySpringCGLIB$$ef8fbbc0.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UploadController$$EnhancerBySpringCGLIB$$47a52412.Upload(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-29 17:55:07.267 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 17:58:33.736 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 17:59:12.493 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:00:29.092 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:01:19.816 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:01:31.462 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 18:01:31.480 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 18:01:31.508 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 18:01:31.579 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:01:31.582 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 89(Long), {"code":20000,"data":{"token":"CC02D8D0E25A04BD4A5CF5E8A2617C85"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 18:01:31.610 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:01:42.357 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:01:55.269 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 18:01:55.290 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 18:01:55.333 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 18:01:55.436 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:01:55.439 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 137(Long), {"code":20000,"data":{"token":"025A1077B7A8DC9F479408F55C1C7665"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 18:01:55.532 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:02:50.611 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:02:50.613 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/tengxun(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@8f17945, org.apache.catalina.session.StandardSessionFacade@cd0ea40](String), 0(Integer), com.qcloud.cos.exception.CosClientException: please make sure bucket name must contain legal appid when appid is missing. example: music-1251122334
	at com.dodannie.blog.controller.UploadController.Upload(UploadController.java:85)
	at com.dodannie.blog.controller.UploadController$$FastClassBySpringCGLIB$$ef8fbbc0.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UploadController$$EnhancerBySpringCGLIB$$ef352034.Upload(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-29 18:02:50.643 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:03:36.425 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:03:36.426 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/tengxun(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6e7bfca, org.apache.catalina.session.StandardSessionFacade@cd0ea40](String), 0(Integer), com.qcloud.cos.exception.CosClientException: please make sure bucket name must contain legal appid when appid is missing. example: music-1251122334
	at com.dodannie.blog.controller.UploadController.Upload(UploadController.java:85)
	at com.dodannie.blog.controller.UploadController$$FastClassBySpringCGLIB$$ef8fbbc0.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UploadController$$EnhancerBySpringCGLIB$$ef352034.Upload(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-29 18:03:36.455 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:11:53.862 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:12:05.280 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 18:12:05.304 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 18:12:05.340 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 18:12:05.427 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:12:05.430 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 114(Long), {"code":20000,"data":{"token":"32D966E592E32A472CD45DA0897BA09F"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 18:12:05.459 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:12:44.700 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:12:44.701 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/tengxun(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@111a9203, org.apache.catalina.session.StandardSessionFacade@73e63699](String), 0(Integer), com.qcloud.cos.exception.CosClientException: please make sure bucket name must contain legal appid when appid is missing. example: music-1251122334
	at com.dodannie.blog.controller.UploadController.Upload(UploadController.java:85)
	at com.dodannie.blog.controller.UploadController$$FastClassBySpringCGLIB$$ef8fbbc0.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.UploadController$$EnhancerBySpringCGLIB$$98547ea4.Upload(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-06-29 18:12:44.730 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:12:49.429 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:13:04.399 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:13:28.091 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 18:13:28.109 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 18:13:28.156 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 18:13:28.252 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:13:28.254 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 136(Long), {"code":20000,"data":{"token":"E279BDC05493CE5145C99BD94E70C547"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 18:13:28.312 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:13:33.992 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:13:33.993 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/tengxun(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1750ebf2, org.apache.catalina.session.StandardSessionFacade@e3008d3](String), 1(Integer), null, POST(String), 499(Long), {"msg":"上传成功","path":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/a3a4af6d-7206-4bcf-8438-5362df191d17.jpg","status":1}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 18:13:34.018 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:31:50.083 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:32:04.116 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 18:32:04.138 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 18:32:04.166 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 18:32:04.248 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:32:04.262 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 95(Long), {"code":20000,"data":{"token":"A2101FA6137D96D12DC0245DE0DDD40E"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 18:32:04.290 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:36:41.937 DEBUG [main]com.dodannie.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.14.RELEASE, Spring v5.1.15.RELEASE
2020-06-29 18:38:37.219 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 18:38:37.238 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 18:38:37.266 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 18:38:37.344 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:38:37.346 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 91(Long), {"code":20000,"data":{"token":"5BA2DECE5312A4C8E47A90C5AD9BAA81"},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 18:38:37.373 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:39:04.163 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:39:04.163 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@e4ca5f1, org.apache.catalina.session.StandardSessionFacade@25d710e8](String), 1(Integer), null, POST(String), 917(Long), {"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/541a838b-53ff-4306-9cc0-64ebdd27142c.png","msg":"上传成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-06-29 18:39:04.190 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:24.676 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-29 18:41:24.676 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-29 18:41:24.688 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-29 18:41:24.703 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:24.704 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 28(Long), {"code":20000,"data":{"token":"A065D8DDB0D5F8EE07FBA0F127E5BD63"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:24.729 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:24.974 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:24.974 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","name":"dodannie","password":"","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:25.000 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:25.083 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-29 18:41:25.083 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-29 18:41:25.095 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2020-06-29 18:41:25.115 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:25.116 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:25.144 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:29.647 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-06-29 18:41:29.648 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-06-29 18:41:29.660 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-06-29 18:41:29.674 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:29.675 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 27(Long), {"code":20000,"data":[{"enable":0,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:29.700 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:31.321 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-06-29 18:41:31.322 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:41:31.341 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-06-29 18:41:31.354 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-29 18:41:31.355 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:41:31.367 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:41:31.385 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:31.386 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 84(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:31.415 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:32.336 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-06-29 18:41:32.337 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-06-29 18:41:32.350 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-06-29 18:41:32.363 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:32.364 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":[{"enable":0,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:32.390 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:36.434 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-06-29 18:41:36.435 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 6(Integer)
2020-06-29 18:41:36.447 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-06-29 18:41:36.462 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-06-29 18:41:36.462 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: Javascript(String), 1(Integer), 1(Integer), 6(Integer)
2020-06-29 18:41:36.489 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-06-29 18:41:36.503 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:36.504 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/enable/6(String), [6](String), 1(Integer), null, PUT(String), 70(Long), {"code":20000,"msg":"已启用"}(String), 127.0.0.1(String)
2020-06-29 18:41:36.528 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:36.852 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-06-29 18:41:36.853 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-06-29 18:41:36.864 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-06-29 18:41:36.878 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:36.879 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 27(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:36.904 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:39.169 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-06-29 18:41:39.170 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:41:39.183 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-29 18:41:39.184 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-29 18:41:39.184 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:41:39.195 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:41:39.244 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:39.244 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 96(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-28 14:54:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-28 14:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:39.270 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:40.138 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-06-29 18:41:40.139 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:41:40.151 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-06-29 18:41:40.164 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-29 18:41:40.164 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:41:40.176 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:41:40.190 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:40.191 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 54(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:40.217 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:42.130 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-06-29 18:41:42.131 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:41:42.142 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-06-29 18:41:42.157 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-06-29 18:41:42.157 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:41:42.169 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:41:42.185 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:42.186 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 57(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-06-28 19:00:47","name":"张馨恬","nickname":"马鞍山丶神烦喵","sex":2,"updateTime":"2020-06-28 19:00:47","userEmail":"xxx","userId":3,"username":"zxt"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:42.211 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:49.437 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-06-29 18:41:49.438 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-06-29 18:41:49.451 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-06-29 18:41:49.466 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:49.467 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 31(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:49.494 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:52.125 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-06-29 18:41:52.126 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:41:52.140 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-29 18:41:52.141 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-29 18:41:52.141 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:41:52.154 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:41:52.204 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:52.205 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 91(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-28 14:54:24"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-28 14:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:52.232 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:55.930 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-29 18:41:55.930 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1277133222783172608(String)
2020-06-29 18:41:55.944 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-29 18:41:55.960 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:55.961 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1277133222783172608(String), [1277133222783172608](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content1","blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","blogType":6,"createdTime":"2020-06-28 14:54:24","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:41:55.987 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:41:59.690 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:41:59.691 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4be6d676, org.apache.catalina.session.StandardSessionFacade@5d00de6a](String), 1(Integer), null, POST(String), 438(Long), {"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/414eb672-c8eb-427c-b89f-8bb43aed8f14.png","msg":"上传成功！"}(String), 127.0.0.1(String)
2020-06-29 18:41:59.716 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:42:04.958 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-29 18:42:04.959 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1277133222783172608(String)
2020-06-29 18:42:04.971 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-29 18:42:04.985 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:42:04.986 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1277133222783172608(String), [1277133222783172608](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content1","blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","blogType":6,"createdTime":"2020-06-28 14:54:24","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:42:05.012 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:42:10.272 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:42:10.273 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4530e6a6, org.apache.catalina.session.StandardSessionFacade@5d00de6a](String), 1(Integer), null, POST(String), 389(Long), {"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","msg":"上传成功！"}(String), 127.0.0.1(String)
2020-06-29 18:42:10.298 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:42:18.803 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-29 18:42:18.803 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1277133222783172608(String)
2020-06-29 18:42:18.816 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-29 18:42:18.818 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-06-29 18:42:18.818 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试博客1(String), https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png(String), <p><strong>content132222222222222222</strong></p>(String), 0(Integer), 0(Integer), 0(Integer), 6(Integer), 0(Integer), 1277133222783172608(String), 1(Integer)
2020-06-29 18:42:18.842 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-06-29 18:42:18.894 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:42:18.894 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/update(String), [Blog(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=<p><strong>content132222222222222222</strong></p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-06-28 14:54:24, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 104(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-06-29 18:42:18.921 DEBUG [http-nio-1000-exec-2]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:42:19.054 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-06-29 18:42:19.055 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:42:19.069 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-29 18:42:19.070 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-29 18:42:19.071 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:42:19.083 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:42:19.135 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:42:19.135 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-28 14:54:24), BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-28 14:54:33)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 92(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-28 14:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:42:19.161 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:46:51.806 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-29 18:46:51.807 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1277133260989087744(String)
2020-06-29 18:46:51.819 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-29 18:46:51.834 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:46:51.835 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1277133260989087744(String), [1277133260989087744](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content2","blogGoods":0,"blogId":"1277133260989087744","blogRead":0,"blogTitle":"测试博客2","blogType":7,"createdTime":"2020-06-28 14:54:33","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:46:51.860 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:46:57.294 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:46:57.295 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1f85f7ba, org.apache.catalina.session.StandardSessionFacade@5d00de6a](String), 1(Integer), null, POST(String), 95(Long), {"code":20000,"data":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","msg":"上传成功！"}(String), 127.0.0.1(String)
2020-06-29 18:46:57.320 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:46:59.961 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-29 18:46:59.962 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1277133260989087744(String)
2020-06-29 18:46:59.974 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-29 18:46:59.975 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-06-29 18:46:59.975 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 测试博客2(String), https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png(String), content2(String), 0(Integer), 0(Integer), 0(Integer), 7(Integer), 0(Integer), 1277133260989087744(String), 1(Integer)
2020-06-29 18:46:59.997 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-06-29 18:47:00.045 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:47:00.046 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/update(String), [Blog(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png, blogContent=content2, blogGoods=0, blogRead=0, blogCollection=0, blogType=7, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-06-28 14:54:33, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 96(Long), {"code":20000,"msg":"更新成功！"}(String), 127.0.0.1(String)
2020-06-29 18:47:00.072 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:47:00.213 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-06-29 18:47:00.214 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:47:00.226 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-29 18:47:00.227 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-29 18:47:00.228 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:47:00.239 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:47:00.287 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:47:00.288 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1277133222783172608, blogTitle=测试博客1, blogImage=https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Javascript, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:24, updateTime=2020-06-29 18:42:19), BlogVo(blogId=1277133260989087744, blogTitle=测试博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=Go, blogSource=null, blogRemark=null, blogComment=0, blogMonth=null, createdTime=2020-06-28 14:54:33, updateTime=2020-06-28 14:54:33)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 82(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:47:00.314 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:47:04.413 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-29 18:47:04.413 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-29 18:47:04.426 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-29 18:47:04.440 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:47:04.441 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":{"header":"https://tva3.sinaimg.cn/crop.0.0.180.180.180/c82ea9aejw1e8qgp5bmzyj2050050aa8.jpg?KID=imgbed,tva&Expires=1593368289&ssig=7xRR1vTLaW","id":1,"name":"dodannie","username":"admin"},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:47:04.467 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:47:16.596 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist, url, cover, created_time, enabled from bl_music where deleted = 0 limit ?, ? 
2020-06-29 18:47:16.597 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:47:16.688 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:47:16.689 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
### The error may involve com.dodannie.blog.mapper.MusicMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getByPage(MusicServiceImpl.java:66)
	at com.dodannie.blog.controller.MusicController.getByPage(MusicController.java:121)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$4448cb13.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
(String), POST(String), 0(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content1","blogGoods":0,"blogId":"1277133222783172608","blogRead":0,"blogTitle":"测试博客1","blogType":6,"createdTime":"2020-06-28 14:54:24","version":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:47:16.717 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:47:16.973 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2020-06-29 18:47:16.974 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:47:16.989 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2020-06-29 18:47:17.005 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2020-06-29 18:47:17.005 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:47:17.017 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:47:17.034 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:47:17.036 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 64(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-06-15 00:05:23","logId":1,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功\"}","logStatus":1,"logTime":22,"logUrl":"/test/testException/1"},{"createdTime":"2020-06-15 00:05:25","logId":2,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功\"}","logStatus":1,"logTime":21,"logUrl":"/test/testException/1"},{"createdTime":"2020-06-15 00:05:27","logId":3,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.dodannie.blog.exception.BlogException: 发生了异常！\n\tat com.dodannie.blog.controller.TestController.testException(TestController.java:23)\n\tat com.dodannie.blog.controller.TestController$$FastClassBySpringCGLIB$$4cba5d1.invoke(<generated>)\n\tat com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)\n\tat com.dodannie.blog.controller.TestController$$EnhancerBySpringCGLIB$$586d0b8c.testException(<generated>)\n","logMethod":"GET","logParams":"[2]","logStatus":0,"logTime":0,"logUrl":"/test/testException/2"},{"createdTime":"2020-06-15 00:05:39","logId":4,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功\"}","logStatus":1,"logTime":12,"logUrl":"/test/testException/1"},{"createdTime":"2020-06-15 00:05:40","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功\"}","logStatus":1,"logTime":15,"logUrl":"/test/testException/1"},{"createdTime":"2020-06-15 21:33:05","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":70,"logUrl":"/admin/login"},{"createdTime":"2020-06-15 21:33:35","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":67,"logUrl":"/admin/login"},{"createdTime":"2020-06-15 21:33:52","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":24,"logUrl":"/admin/login"},{"createdTime":"2020-06-15 21:38:35","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=dodannie, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":2166,"logUrl":"/admin/login"},{"createdTime":"2020-06-15 21:38:53","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=dodannie, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":58,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":163,"totalPage":17},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:47:17.065 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:53:29.514 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-06-29 18:53:29.515 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:53:29.528 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-06-29 18:53:29.542 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-29 18:53:29.543 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:53:29.556 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:53:29.572 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:53:29.573 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 63(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:53:29.599 DEBUG [http-nio-1000-exec-5]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:53:40.333 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.save.debug:159 -==>  Preparing: insert into bl_about(about_title, about_content) values( ?, ? ) 
2020-06-29 18:53:40.334 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.save.debug:159 -==> Parameters: 23(String), <p>22222222222222222</p>(String)
2020-06-29 18:53:40.359 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.AboutMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:53:40.379 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:53:40.380 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=23, aboutContent=<p>22222222222222222</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 1(Integer), null, POST(String), 40(Long), {"code":20000,"msg":"添加成功！"}(String), 127.0.0.1(String)
2020-06-29 18:53:40.405 DEBUG [http-nio-1000-exec-4]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:53:40.583 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-06-29 18:53:40.584 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:53:40.596 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 2
2020-06-29 18:53:40.610 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-29 18:53:40.611 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:53:40.622 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:53:40.636 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:53:40.637 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[About(aboutId=1, aboutTitle=测试关于, aboutContent=null, aboutRead=0, createdTime=2020-06-28 16:13:51, updateTime=2020-06-28 16:13:51, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 53(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"},{"aboutId":2,"aboutRead":0,"aboutTitle":"23","createdTime":"2020-06-29 18:53:41","enable":0,"updateTime":"2020-06-29 18:53:41"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:53:40.662 DEBUG [http-nio-1000-exec-6]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:53:45.727 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AboutMapper.deleteById.debug:159 -==>  Preparing: update bl_about set deleted = 1 where about_id = ? 
2020-06-29 18:53:45.728 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AboutMapper.deleteById.debug:159 -==> Parameters: 2(Integer)
2020-06-29 18:53:45.753 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.AboutMapper.deleteById.debug:159 -<==    Updates: 1
2020-06-29 18:53:45.766 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:53:45.767 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/delete/2(String), [2](String), 1(Integer), null, DELETE(String), 41(Long), {"code":20000,"msg":"删除成功！"}(String), 127.0.0.1(String)
2020-06-29 18:53:45.791 DEBUG [http-nio-1000-exec-10]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:53:46.116 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?, ? 
2020-06-29 18:53:46.116 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:53:46.128 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-06-29 18:53:46.141 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-06-29 18:53:46.142 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:53:46.153 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:53:46.167 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:53:46.167 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[About(aboutId=1, aboutTitle=测试关于, aboutContent=null, aboutRead=0, createdTime=2020-06-28 16:13:51, updateTime=2020-06-28 16:13:51, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=23, aboutContent=null, aboutRead=0, createdTime=2020-06-29 18:53:41, updateTime=2020-06-29 18:53:41, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 52(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-06-28 16:13:51","enable":0,"updateTime":"2020-06-28 16:13:51"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:53:46.193 DEBUG [http-nio-1000-exec-8]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:54:45.481 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-06-29 18:54:45.481 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-29 18:54:45.495 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-06-29 18:54:45.496 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-29 18:54:45.496 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-29 18:54:45.509 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-29 18:54:45.559 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:54:45.560 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 89(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","createdTime":"2020-06-28 14:54:24","typeName":"Javascript","updateTime":"2020-06-29 18:42:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","createdTime":"2020-06-28 14:54:33","typeName":"Go","updateTime":"2020-06-29 18:47:00"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:54:45.590 DEBUG [http-nio-1000-exec-9]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:54:47.646 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-29 18:54:47.647 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1277133222783172608(String)
2020-06-29 18:54:47.659 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-29 18:54:47.673 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:54:47.673 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1277133222783172608(String), [1277133222783172608](String), 1(Integer), null, GET(String), 26(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p><strong>content132222222222222222</strong></p>","blogGoods":0,"blogId":"1277133222783172608","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/47738cd2-0d24-4c68-88b7-0ed2184df83c.png","blogRead":0,"blogTitle":"测试博客1","blogType":6,"createdTime":"2020-06-28 14:54:24","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:54:47.699 DEBUG [http-nio-1000-exec-7]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:54:53.327 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-29 18:54:53.328 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1277133260989087744(String)
2020-06-29 18:54:53.340 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-29 18:54:53.354 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:54:53.355 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1277133260989087744(String), [1277133260989087744](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
### The error may involve com.dodannie.blog.mapper.MusicMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
	at com.dodannie.blog.service.impl.MusicServiceImpl.getByPage(MusicServiceImpl.java:66)
	at com.dodannie.blog.controller.MusicController.getByPage(MusicController.java:121)
	at com.dodannie.blog.controller.MusicController$$FastClassBySpringCGLIB$$1ced53fe.invoke(<generated>)
	at com.dodannie.blog.aspect.RequestAspect.doAround(RequestAspect.java:58)
	at com.dodannie.blog.controller.MusicController$$EnhancerBySpringCGLIB$$4448cb13.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
(String), GET(String), 27(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"content2","blogGoods":0,"blogId":"1277133260989087744","blogImage":"https://dodannie-1300549060.cos.ap-nanjing.myqcloud.com/blog/2020/5/29/fa547f59-abbe-4924-a3ec-a31a06e1c02c.png","blogRead":0,"blogTitle":"测试博客2","blogType":7,"createdTime":"2020-06-28 14:54:33","version":2},"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:54:53.384 DEBUG [http-nio-1000-exec-3]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-29 18:59:04.016 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-06-29 18:59:04.017 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-06-29 18:59:04.029 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-06-29 18:59:04.042 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-29 18:59:04.043 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 27(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"Javascript"},{"enable":1,"typeBlogCount":1,"typeId":7,"typeName":"Go"}],"msg":"操作成功"}(String), 127.0.0.1(String)
2020-06-29 18:59:04.069 DEBUG [http-nio-1000-exec-1]com.dodannie.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
